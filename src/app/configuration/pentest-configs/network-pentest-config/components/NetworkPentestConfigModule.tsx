"use client"

import { useState } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog"
import { MoreHorizontal, Plus, Edit, Trash2 } from "lucide-react"
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from "@/components/ui/dropdown-menu"
import { NetworkPentestConfigForm } from "./NetworkPentestConfigForm"
import AddNetworkPentestBtnWithFormModal from "./AddNetworkPentestBtnWithFormModal"

interface NetworkPentestConfig {
    id: string
    clientName: string
    configName: string
    scopeType: string
    aggressiveness: string
    createdBy: string
    createdOn: string
}

const mockNetworkPentestConfigs: NetworkPentestConfig[] = [
    {
        id: "1",
        clientName: "Carta Worldwide",
        configName: "Canadian Internal Network Pentest - Q3 2025",
        scopeType: "CIDR Network Range",
        aggressiveness: "Normal",
        createdBy: "Sayan Roy",
        createdOn: "07-Apr-2025 13:38",
    },
    {
        id: "2",
        clientName: "TechCorp Solutions",
        configName: "External Infrastructure Assessment",
        scopeType: "Array of IPs",
        aggressiveness: "Stealthy",
        createdBy: "Sumalya Mukherjee",
        createdOn: "30-Jun-2025 20:09",
    },
]

export function NetworkPentestConfigModule() {
    const [configurations, setConfigurations] = useState<NetworkPentestConfig[]>(mockNetworkPentestConfigs)
    const [isFormOpen, setIsFormOpen] = useState(false)

    const handleSaveConfiguration = (newConfig: Omit<NetworkPentestConfig, "id" | "createdBy" | "createdOn">) => {
        const configuration: NetworkPentestConfig = {
            ...newConfig,
            id: Date.now().toString(),
            createdBy: "Current User",
            createdOn: new Date().toLocaleDateString("en-GB", {
                day: "2-digit",
                month: "short",
                year: "numeric",
                hour: "2-digit",
                minute: "2-digit",
            }),
        }
        setConfigurations((prev) => [...prev, configuration])
        setIsFormOpen(false)
    }

    return (
        <div className="space-y-6">
            <div className="flex justify-between items-center">
                <div>
                    <h2 className="text-xl font-semibold text-blue-400 mb-1">
                        Network Pentest Configurations
                        <span className="ml-2 text-sm bg-blue-600 text-white px-2 py-1 rounded-full">{configurations.length}</span>
                    </h2>
                    {/* <p className="text-slate-400 text-sm">Manage your penetration testing configurations</p> */}
                </div>

                <AddNetworkPentestBtnWithFormModal />

                {/* <Dialog open={isFormOpen} onOpenChange={setIsFormOpen}>
                    <DialogTrigger asChild>
                        <Button className="bg-blue-600 hover:bg-blue-700 text-white">
                            <Plus className="w-4 h-4 mr-2" />
                            Add Configuration
                        </Button>
                    </DialogTrigger>
                    <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto bg-slate-900 border-slate-700 text-white">
                        <DialogHeader>
                            <DialogTitle className="text-xl text-white">Configure Penetration Test</DialogTitle>
                        </DialogHeader>
                        <NetworkPentestConfigForm onSave={handleSaveConfiguration} onClose={() => setIsFormOpen(false)} />
                    </DialogContent>
                </Dialog> */}
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                {configurations.map((config) => (
                    <Card key={config.id} className="bg-slate-800 border-slate-700 hover:bg-slate-750 transition-colors">
                        <CardHeader className="p-0 px-6 py-3">
                            <div className="flex justify-between items-start">
                                <div className="flex-1">
                                    <div className="flex items-center gap-2 mb-2">
                                        {/* <div className="w-8 h-8 bg-blue-600 rounded-md flex items-center justify-center text-white font-semibold text-sm"> */}
                                        <div
                                            className="text-blue-800 dark:text-blue-500 bg-blue-100 dark:bg-blue-500/20 flex h-12 w-12 shrink-0 items-center justify-center rounded-full text-tremor-default font-medium"
                                            aria-hidden={true}
                                        >
                                            {config.clientName
                                                .split(" ")
                                                .map((word) => word[0])
                                                .join("")
                                                .slice(0, 2)}
                                        </div>
                                        <CardTitle className="text-white text-base">{config.configName}</CardTitle>
                                    </div>
                                </div>
                                <DropdownMenu>
                                    <DropdownMenuTrigger asChild>
                                        <Button variant="ghost" size="sm" className="text-slate-400 hover:text-white">
                                            <MoreHorizontal className="w-4 h-4" />
                                        </Button>
                                    </DropdownMenuTrigger>
                                    <DropdownMenuContent className="bg-slate-800 border-slate-700">
                                        <DropdownMenuItem className="text-slate-300 hover:text-white hover:bg-slate-700">
                                            <Edit className="w-4 h-4 mr-2" />
                                            Edit
                                        </DropdownMenuItem>
                                        <DropdownMenuItem className="text-red-400 hover:text-red-300 hover:bg-slate-700">
                                            <Trash2 className="w-4 h-4 mr-2" />
                                            Delete
                                        </DropdownMenuItem>
                                    </DropdownMenuContent>
                                </DropdownMenu>
                            </div>
                        </CardHeader>
                        <CardContent className="space-y-3">
                            <div className="grid grid-cols-2 gap-4 text-sm">
                                <div>
                                    <p className="text-slate-400">Client Name</p>
                                    <p className="text-white font-medium">{config.clientName}</p>
                                </div>
                                <div>
                                    <p className="text-slate-400">Scope Type</p>
                                    <p className="text-white font-medium">{config.scopeType}</p>
                                </div>
                            </div>

                            <div className="flex justify-between items-center text-sm">
                                <div>
                                    <p className="text-slate-400 mb-1">Aggressiveness</p>
                                    <span
                                        className={`inline-flex px-2 py-1 rounded-full text-xs font-medium ${config.aggressiveness === "Stealthy"
                                            ? "bg-green-900 text-green-300"
                                            : config.aggressiveness === "Normal"
                                                ? "bg-blue-900 text-blue-300"
                                                : "bg-red-900 text-red-300"
                                            }`}
                                    >
                                        {config.aggressiveness}
                                    </span>
                                </div>
                            </div>

                            <div className="pt-2 border-t border-slate-700">
                                <div className="grid grid-cols-2 gap-4 text-xs text-slate-400">
                                    <div>
                                        <p>Created By</p>
                                        <p className="text-white">{config.createdBy}</p>
                                    </div>
                                    <div>
                                        <p>Created On</p>
                                        <p className="text-white">{config.createdOn}</p>
                                    </div>
                                </div>
                            </div>
                        </CardContent>
                    </Card>
                ))}
            </div>
        </div>
    )
}
