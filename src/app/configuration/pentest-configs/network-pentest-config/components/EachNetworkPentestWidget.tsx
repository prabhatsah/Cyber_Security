import { NetworkDetails } from "@/app/pen-test/network-pen-test/components/type"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from "@/components/ui/dropdown-menu"
import { format } from "date-fns"
import { Edit, MoreHorizontal, Trash2 } from "lucide-react"
import { useState } from "react"
import { deleteConfigWithKey } from "@/utils/api"
import { NetworkPentestConfigForm } from "./NetworkPentestConfigForm"

export default function EachNetworkPentestWidget({ pentestBasicDetails }: { pentestBasicDetails: NetworkDetails }) {
    const [isEditFormOpen, setEditFormOpen] = useState(false);

    const toggleFormModal = function () {
        setEditFormOpen((prev) => !prev);
    };

    const handleDeletePentestConfig = async function (pentestId: string) {
        await deleteConfigWithKey("penetration_testing_history", "pentestid", pentestId);
    };

    return (
        <>
            <Card key={pentestBasicDetails.pentestId} className="bg-slate-800 border-slate-700 hover:bg-slate-750 transition-colors">
                <CardHeader className="p-0 px-6 py-3">
                    <div className="flex justify-between items-start">
                        <div className="flex-1">
                            <div className="flex items-center gap-2 mb-2">
                                <div
                                    className="text-blue-800 dark:text-blue-500 bg-blue-100 dark:bg-blue-500/20 flex h-12 w-12 shrink-0 items-center justify-center rounded-full text-tremor-default font-medium"
                                    aria-hidden={true}
                                >
                                    {pentestBasicDetails.clientName
                                        .split(" ")
                                        .map((word) => word[0])
                                        .join("")
                                        .slice(0, 2)}
                                </div>
                                <CardTitle className="text-white text-base">{pentestBasicDetails.pentestName}</CardTitle>
                            </div>
                        </div>
                        <DropdownMenu>
                            <DropdownMenuTrigger asChild>
                                <Button variant="ghost" size="sm" className="text-slate-400 hover:text-white">
                                    <MoreHorizontal className="w-4 h-4" />
                                </Button>
                            </DropdownMenuTrigger>
                            <DropdownMenuContent className="bg-slate-800 border-slate-700">
                                <DropdownMenuItem onClick={toggleFormModal} title="Edit Configuration"
                                    className="text-slate-300 hover:text-white hover:bg-slate-700">
                                    <Edit className="w-4 h-4 mr-2" />
                                    Edit
                                </DropdownMenuItem>
                                <DropdownMenuItem className="text-red-400 hover:text-red-300 hover:bg-slate-700">
                                    <Trash2 className="w-4 h-4 mr-2" />
                                    Delete
                                </DropdownMenuItem>
                            </DropdownMenuContent>
                        </DropdownMenu>
                    </div>
                </CardHeader>
                <CardContent className="space-y-3">
                    <div className="grid grid-cols-2 gap-4 text-sm">
                        <div>
                            <p className="text-slate-400">Client Name</p>
                            <p className="text-white font-medium">{pentestBasicDetails.clientName}</p>
                        </div>
                        <div>
                            <p className="text-slate-400">Scope Type</p>
                            <p className="text-white font-medium">{pentestBasicDetails.scopeType}</p>
                        </div>
                    </div>

                    <div className="flex justify-between items-center text-sm">
                        <div>
                            <p className="text-slate-400 mb-1">Aggressiveness</p>
                            <span
                                className={`inline-flex px-2 py-1 rounded-full text-xs font-medium ${pentestBasicDetails.aggressiveness === "Stealthy"
                                    ? "bg-green-900 text-green-300"
                                    : pentestBasicDetails.aggressiveness === "Normal"
                                        ? "bg-blue-900 text-blue-300"
                                        : "bg-red-900 text-red-300"
                                    }`}
                            >
                                {pentestBasicDetails.aggressiveness}
                            </span>
                        </div>
                    </div>

                    <div className="pt-2 border-t border-slate-700">
                        <div className="grid grid-cols-2 gap-4 text-xs text-slate-400">
                            <div>
                                <p>Created By</p>
                                <p className="text-white">{pentestBasicDetails.createdBy.userName}</p>
                            </div>
                            <div>
                                <p>Created On</p>
                                <p className="text-white">{pentestBasicDetails.createdOn}</p>
                            </div>
                        </div>
                    </div>
                </CardContent>
            </Card>


            <NetworkPentestConfigForm
                isFormModalOpen={isEditFormOpen}
                onClose={toggleFormModal}
                savedDataToBePopulated={pentestBasicDetails}
            />
        </>
    )
}