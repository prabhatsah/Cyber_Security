'use client';

import { format } from 'date-fns';
// import PriorityBadge from './PriorityBadge';
// import StatusBadge from './StatusBadge';
// import ActionButton from './ActionButton';
import { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';
import GlobalLoader from '@/components/GlobalLoader';
import { Badge } from '@/components/Badge';
import { NetworkPenTestWithoutScanModified } from '../../../NetworkPentestType';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"

const priorityLevelMap: Record<string, "error" | "default" | "success" | "neutral" | "warning" | undefined> = {
    "Aggressive": "error",
    "Normal": "default",
    "Stealthy": "success"
}

export default function NetworkPentestWidget({ allPentestWidgetData }: { allPentestWidgetData: NetworkPenTestWithoutScanModified[]; }) {
    const router = useRouter();
    const [loading, setLoading] = useState(false);

    const handleActionClick = (href: string) => {
        setLoading(true);
        router.push(href);
    };

    useEffect(() => {
        setLoading(false);
    }, []);

    return (
        <>
            {loading && <GlobalLoader />}

            <div className="space-y-4 mb-4 w-full">
                <div className="overflow-x-auto">
                    <div className="shadow rounded-lg border">
                        <div className="px-6 py-4 border-b">
                            <h2 className="text-lg font-medium text-widgetHeader">Active Tests</h2>
                        </div>
                        <Table>
                            <TableHeader>
                                <TableRow className="border-slate-700 hover:bg-slate-750">
                                    <TableHead className="px-6 py-3 text-left text-xs font-medium text-widget-mainHeader uppercase tracking-wider">
                                        Configuration Name
                                    </TableHead>
                                    <TableHead className="px-6 py-3 text-left text-xs font-medium text-widget-mainHeader uppercase tracking-wider">
                                        Client Name
                                    </TableHead>
                                    <TableHead className="px-6 py-3 text-left text-xs font-medium text-widget-mainHeader uppercase tracking-wider">
                                        Scope Type
                                    </TableHead>
                                    <TableHead className="px-6 py-3 text-left text-xs font-medium text-widget-mainHeader uppercase tracking-wider">
                                        Start Date
                                    </TableHead>
                                    <TableHead className="px-6 py-3 text-left text-xs font-medium text-widget-mainHeader uppercase tracking-wider">
                                        Aggressiveness
                                    </TableHead>
                                    <TableHead className="px-6 py-3 text-left text-xs font-medium text-widget-mainHeader uppercase tracking-wider">
                                        Progress
                                    </TableHead>
                                </TableRow>
                            </TableHeader>
                            <TableBody>
                                {allPentestWidgetData.map((eachPenTestData) => {
                                    const pentestIdNameEncodedUrl = encodeURIComponent(`${eachPenTestData.networkDetails.pentestId}_${eachPenTestData.networkDetails.pentestName}`);
                                    const pentestUrl = `network-pen-test/${pentestIdNameEncodedUrl}/reconnaissance`;

                                    const progress = Math.round(eachPenTestData.networkDetails.progress);

                                    return (
                                        <TableRow key={eachPenTestData.pentestId} className="border-slate-700 hover:bg-slate-750">
                                            <TableCell className="px-6 py-4 whitespace-nowrap">
                                                <div onClick={() => handleActionClick(pentestUrl)} className='text-sm text-widget-mainDesc cursor-pointer hover:underline'>
                                                    {eachPenTestData.networkDetails.pentestName}
                                                </div>
                                            </TableCell>
                                            <TableCell className="px-6 py-4 whitespace-nowrap">
                                                <div className='text-sm text-widget-mainDesc'>
                                                    {eachPenTestData.networkDetails.clientName}
                                                </div>
                                            </TableCell>
                                            <TableCell className="px-6 py-4 whitespace-nowrap">
                                                <div className='text-sm text-widget-mainDesc'>
                                                    {eachPenTestData.networkDetails.scopeType}
                                                </div>
                                            </TableCell>
                                            <TableCell className="px-6 py-4 whitespace-nowrap">
                                                <div className='text-sm text-widget-mainDesc'>
                                                    {eachPenTestData.networkDetails.startDate}
                                                </div>
                                            </TableCell>
                                            <TableCell className="px-6 py-4 whitespace-nowrap">
                                                <Badge variant={priorityLevelMap[eachPenTestData.networkDetails.aggressiveness]}>
                                                    {eachPenTestData.networkDetails.aggressiveness}
                                                </Badge>
                                            </TableCell>
                                            <TableCell className='px-6 py-4 whitespace-nowrap flex items-center gap-4'>
                                                <div className="w-full bg-gray-200 rounded-full h-2.5">
                                                    <div className="bg-blue-600 h-2.5 rounded-full" style={{ width: `${progress}%` }}></div>
                                                </div>
                                                <div className="text-xs text-widget-mainDesc mt-1">{progress}%</div>
                                            </TableCell>
                                        </TableRow>
                                    )
                                })}
                            </TableBody>
                        </Table>
                    </div>
                </div>
            </div>
        </>
    );
}