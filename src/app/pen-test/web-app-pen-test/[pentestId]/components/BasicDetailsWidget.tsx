import { Badge, Card, Divider, } from '@tremor/react';
import { RiBuildingFill, RiMapPin2Fill, RiUserFill, RiTimeLine, RiAlarmWarningFill } from '@remixicon/react';
import React from 'react';
import { BasicDetails } from '../../components/type';
import { format } from 'date-fns';

const getPriorityColor = (priority: string) => {
    switch (priority.toLowerCase()) {
        case 'high':
            return 'red';
        case 'medium':
            return 'orange';
        case 'low':
            return 'green';
        default:
            return 'gray';
    }
};

const getSecurityLevelColor = (level: string) => {
    switch (level.toLowerCase()) {
        case 'high':
            return 'green';
        case 'medium':
            return 'yellow';
        case 'low':
            return 'red';
        default:
            return 'gray';
    }
};

export default function BasicDetailsWidget({ componentData }: { componentData: BasicDetails }) {
    return (
        <>
            <Card key={componentData.pentestName} className="bg-gray-50 p-6 hover:bg-gray-100 transition-colors duration-200 mb-4">
                <div className="space-y-6">
                    <div className="flex justify-between items-start">
                        <div>
                            <h4 className="text-xl font-semibold text-widget-mainHeader">
                                {componentData.pentestName}
                            </h4>
                            <p className="text-widget-mainDesc max-w-3xl">
                                {componentData.pentestDescription}
                            </p>
                        </div>
                        <div className="flex space-x-2">
                            <Badge className='rounded-md' color={getPriorityColor(componentData.priorityLevel)} size="lg">
                                Priority: {componentData.priorityLevel}
                            </Badge>
                            <Badge className='rounded-md' color={getSecurityLevelColor(componentData.securityLevel ?? "Low")} size="lg">
                                Security: {componentData.securityLevel}
                            </Badge>
                        </div>
                    </div>
                    <Divider />
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                        <div className="flex items-center space-x-3">
                            <RiBuildingFill
                                className="size-5 text-blue-600"
                                aria-hidden={true}
                            />
                            <div>
                                <p className="text-sm text-widget-mainHeader">Web App Name</p>
                                <p className="text-widget-mainDesc font-medium">{componentData.webApp}</p>
                            </div>
                        </div>
                        <div className="flex items-center space-x-3">
                            <RiMapPin2Fill
                                className="size-5 text-green-600"
                                aria-hidden={true}
                            />
                            <div>
                                <p className="text-sm text-widget-mainHeader">Scope</p>
                                <p className="text-widget-mainDesc font-medium">{componentData.scope}</p>
                            </div>
                        </div>
                        <div className="flex items-center space-x-3">
                            <RiUserFill
                                className="size-5 text-purple-600"
                                aria-hidden={true}
                            />
                            <div>
                                <p className="text-sm text-widget-mainHeader">Testing Type</p>
                                <p className="text-widget-mainDesc font-medium">{componentData.testingType}</p>
                            </div>
                        </div>
                        <div className="flex items-center space-x-3">
                            <RiTimeLine
                                className="size-5 text-orange-600"
                                aria-hidden={true}
                            />
                            <div>
                                <p className="text-sm text-widget-mainHeader">Duration</p>
                                <p className="text-widget-mainDesc font-medium">
                                    {format(new Date(componentData.startDate), "dd-MMM-yyyy HH:mm")} - {format(new Date(componentData.endDate), "dd-MMM-yyyy HH:mm")}
                                </p>
                            </div>
                        </div>
                        <div className="flex items-center space-x-3">
                            <RiAlarmWarningFill
                                className="size-5 text-yellow-600"
                                aria-hidden={true}
                            />
                            <div>
                                <p className="text-sm text-widget-mainHeader">Time Zone</p>
                                <p className="text-widget-mainDesc font-medium">{componentData.timeZone}</p>
                            </div>
                        </div>
                    </div>
                </div>
            </Card>
        </>
    )
}