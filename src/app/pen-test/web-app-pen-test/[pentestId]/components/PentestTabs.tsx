'use client';

import { Card, Tab, TabGroup, TabList, TabPanel, TabPanels } from '@tremor/react';
import { RiCheckFill } from '@remixicon/react';
import ReconnaissanceConfigFormData from '../../../reconnaissance-pen-test/page';
import React, { JSX } from 'react';
// import BasicDetailsWidget from './BasicDetailsWidget';
import NoSavedPentestTemplate from './NoSavedPentestTemplate';
import { BasicDetails, PenTestModified } from '../../components/type';
import BasicDetailsWidget from '../basic-details/page';
import { redirect } from 'next/navigation';

export default function PentestTabs({ selectedPentestData }: { selectedPentestData: PenTestModified }) {

    const basicDetailsTab: {
        pentestState: string;
        ComponentName: (props: { componentData: BasicDetails }) => JSX.Element;
        componentData: BasicDetails
    } = {
        pentestState: 'Planning',
        ComponentName: BasicDetailsWidget,
        componentData: selectedPentestData.basicDetails,
    };

    const tabData = [
        {
            pentestState: 'Reconnaissance',
            ComponentName: ReconnaissanceConfigFormData,
            componentData: selectedPentestData.reconnaissance,
        },
        {
            pentestState: 'Vulnerability Scanning',
            ComponentName: NoSavedPentestTemplate,
            componentData: selectedPentestData.vulnerabilityScanning,
        },
        {
            pentestState: 'Exploitation',
            ComponentName: NoSavedPentestTemplate,
            componentData: selectedPentestData.exploitation,
        },
        {
            pentestState: 'Post Exploitation',
            ComponentName: NoSavedPentestTemplate,
            componentData: selectedPentestData.postExploitation,
        },
        {
            pentestState: 'AI Analysis',
            ComponentName: NoSavedPentestTemplate,
            componentData: selectedPentestData.aiAnalysis,
        },
    ];

    return (
        <>
            <Card className="bg-tremor-background-muted p-0 dark:bg-dark-tremor-background-muted h-full">
                <TabGroup>
                    <TabList className="bg-tremor-background-muted px-6 dark:bg-dark-tremor-background-muted mb-2">
                        <>
                            <Tab
                                key={basicDetailsTab.pentestState}
                                className="pb-2.5 font-medium hover:border-gray-300 space-x-2 w-fit"
                            >
                                <div className="flex items-center justify-between gap-4 font-medium text-tremor-content-strong dark:text-dark-tremor-content-strong">
                                    <div className='flex items-center gap-2'>
                                        <span>1.</span>
                                        {basicDetailsTab.pentestState}
                                    </div>
                                    <div className='flex items-center justify-center h-5 w-5 rounded-full bg-green-500 text-white'>
                                        <RiCheckFill />
                                    </div>
                                </div>
                                {/* {basicDetailsTab.pentestState === 'Completed' && ( */}
                                {/* )} */}
                            </Tab>
                            {tabData.map((eachTab, index) => (
                                <Tab
                                    key={eachTab.pentestState}
                                    className="pb-2.5 font-medium hover:border-gray-300 flex items-center space-x-2"
                                >
                                    <div className="flex items-center justify-between gap-4 font-medium text-tremor-content-strong dark:text-dark-tremor-content-strong">
                                        <div className='flex items-center gap-2'>
                                            <span>{index + 2}.</span> {/* Serial Number */}
                                            {eachTab.pentestState}
                                        </div>
                                        {/* Right Tick Icon for Completed Tabs */}
                                        {eachTab.componentData !== null && (
                                            <div className='flex items-center justify-center h-5 w-5 rounded-full bg-green-500 text-white'>
                                                <RiCheckFill />
                                            </div>
                                        )}
                                    </div>
                                </Tab>
                            ))}
                        </>
                    </TabList>

                    <TabPanels>
                        <TabPanel
                            key="Planning"
                            className="p-4 h-full"
                        >
                            <basicDetailsTab.ComponentName componentData={basicDetailsTab.componentData} />
                        </TabPanel>
                        {tabData.map((eachTab) => (
                            <TabPanel
                                key={eachTab.pentestState}
                                className="p-4"
                            >
                                {<eachTab.ComponentName componentData={eachTab.componentData} />}
                                {/* ? (
                                        <eachTab.ReconnaissanceComponentTab />
                                    ) : eachTab.orders.map((order) => (
                                        <Card key={order.penTestName} className="bg-gray-50 p-6 hover:bg-gray-100 transition-colors duration-200 mb-4">
                                            <div className="space-y-6">
                                                <div className="flex justify-between items-start">
                                                    <div>
                                                        <h4 className="text-xl font-semibold text-widget-mainHeader">
                                                            {order.penTestName}
                                                        </h4>
                                                        <p className="text-widget-mainDesc max-w-3xl">
                                                            {order.penTestDescription}
                                                        </p>
                                                    </div>
                                                    <div className="flex space-x-2">
                                                        <Badge color={getPriorityColor(order.priority)} size="lg">
                                                            Priority: {order.priority}
                                                        </Badge>
                                                        <Badge color={getSecurityLevelColor(order.securityLevel)} size="lg">
                                                            Security: {order.securityLevel}
                                                        </Badge>
                                                    </div>
                                                </div>
                                                <Divider />
                                                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                                                    <div className="flex items-center space-x-3">
                                                        <RiBuildingFill
                                                            className="size-5 text-blue-600"
                                                            aria-hidden={true}
                                                        />
                                                        <div>
                                                            <p className="text-sm text-widget-mainHeader">Web App Name</p>
                                                            <p className="text-widget-mainDesc font-medium">{order.webAppName}</p>
                                                        </div>
                                                    </div>
                                                    <div className="flex items-center space-x-3">
                                                        <RiMapPin2Fill
                                                            className="size-5 text-green-600"
                                                            aria-hidden={true}
                                                        />
                                                        <div>
                                                            <p className="text-sm text-widget-mainHeader">Scope</p>
                                                            <p className="text-widget-mainDesc font-medium">{order.scope}</p>
                                                        </div>
                                                    </div>
                                                    <div className="flex items-center space-x-3">
                                                        <RiUserFill
                                                            className="size-5 text-purple-600"
                                                            aria-hidden={true}
                                                        />
                                                        <div>
                                                            <p className="text-sm text-widget-mainHeader">Testing Type</p>
                                                            <p className="text-widget-mainDesc font-medium">{order.typeOfTesting}</p>
                                                        </div>
                                                    </div>
                                                    <div className="flex items-center space-x-3">
                                                        <RiTimeLine
                                                            className="size-5 text-orange-600"
                                                            aria-hidden={true}
                                                        />
                                                        <div>
                                                            <p className="text-sm text-widget-mainHeader">Duration</p>
                                                            <p className="text-widget-mainDesc font-medium">
                                                                {order.startDate} - {order.endDate}
                                                            </p>
                                                        </div>
                                                    </div>
                                                    <div className="flex items-center space-x-3">
                                                        <RiAlarmWarningFill
                                                            className="size-5 text-yellow-600"
                                                            aria-hidden={true}
                                                        />
                                                        <div>
                                                            <p className="text-sm text-widget-mainHeader">Time Zone</p>
                                                            <p className="text-widget-mainDesc font-medium">{order.timeZone}</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </Card>
                                    )) */}
                            </TabPanel>
                        ))}
                    </TabPanels>
                </TabGroup>
            </Card>
        </>
    );
}
