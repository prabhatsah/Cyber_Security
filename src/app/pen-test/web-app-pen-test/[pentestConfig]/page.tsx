'use client';
import React from "react";

import { RenderAppBreadcrumb } from "@/components/app-breadcrumb";
import { Button } from "@/components/Button";
import Link from 'next/link';
import { RiAddFill } from "@remixicon/react";
import { useState } from "react";
import PenTestConfigFormModal from "./PentestConfigForm";
export default function CloudcontainerDetails({
    params,
}: {
    params: Promise<{ pentestConfig: string }>;
}) {
    const unwrappedParams = React.use(params); // Unwrap the Promise here
    const pentestConfigUrl = unwrappedParams.pentestConfig;
    const pentestConfigName = pentestConfigUrl
        .split("-") // Split the string at hyphens
        .map((word) =>
            word === "ibm"
                ? word.toUpperCase()
                : word.charAt(0).toUpperCase() + word.slice(1)
        ) // Capitalize the first letter of each word
        .join(" ");

    const [isFormModalOpen, setFormModalOpen] = useState(false);

    const toggleFormModal = () => {
        setFormModalOpen((prev) => !prev);
    };

    return (
        <>
            <RenderAppBreadcrumb
                breadcrumb={{
                    level: 0,
                    title: "Penetration Testing",
                    href: "/pen-test",
                }}
            />
            <RenderAppBreadcrumb
                breadcrumb={{
                    level: 1,
                    title: "Web Application Penetration Testing",
                    href: "/pen-test/web-app-pen-test",
                }}
            />
            <RenderAppBreadcrumb
                breadcrumb={{
                    level: 2,
                    title: pentestConfigName,
                    href: `/pen-test/web-app-pen-test/${pentestConfigUrl}`,
                }}
            />

            <div className='flex items-center justify-between mb-4'>
                <h2 className='mb-4 text-widgetHeader'>Configure Pentest</h2>
                <Button onClick={toggleFormModal}>
                    <RiAddFill className="h-5 w-5" />
                    <span>Create Panetest</span>
                </Button>
                <PenTestConfigFormModal
                    pentestConfigUrl={pentestConfigUrl}
                    isFormModalOpen={isFormModalOpen}
                    onClose={toggleFormModal}
                />
            </div>

        </>
    );
}
