'use client';

import { Callout } from '@/components/Callout';
import { RiCalendarScheduleLine, RiCrosshairLine, RiFolderOpenLine, RiInformationLine, RiMoneyCnyBoxFill, RiTimeZoneFill, RiTimeZoneLine, RiUserLine } from '@remixicon/react';
import {
    Card,
    Divider,
    ProgressCircle,
} from '@tremor/react';
import { PenTestModified } from './type';
import { format, formatDistanceToNowStrict } from 'date-fns';
import Link from 'next/link';
import { Button } from '@/components/Button';


function classNames(...classes: string[]) {
    return classes.filter(Boolean).join(' ');
}

const data = [
    {
        status: 'In progress',
        icon: RiTimeZoneFill,
        iconColor: 'text-blue-500',
        badgeColor: 'Low',
        orders: [
            {
                item: 'Ikon Dev Pentest',
                scope: 'Internal',
                testingType: 'White-box',
                startDate: '10-Apr-2025 15:30',
                endDate: '17-Apr-2025 15:30',
                timeZone: '(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi',
                fulfillmentActual: 8,
                fulfillmentTotal: 10,
                lastUpdated: '2min ago',
                createdBy: 'Siddharth Kumar',
            },
        ],
    },
];

const statusColor: Record<string, string> = {
    'In Progress':
        'bg-blue-50 text-blue-700 ring-blue-600/20 dark:bg-blue-400/10 dark:text-blue-400 dark:ring-blue-400/20',
    'Completed':
        'bg-emerald-50 text-emerald-700 ring-emerald-600/20 dark:bg-emerald-400/10 dark:text-emerald-400 dark:ring-emerald-400/20',
    'Pending':
        'bg-orange-50 text-orange-700 ring-orange-600/20 dark:bg-orange-400/10 dark:text-orange-400 dark:ring-orange-400/20',
};
const badgeColor: Record<string, string> = {
    'Low':
        'bg-green-50 text-green-700 ring-green-600/20 dark:bg-green-400/10 dark:text-green-400 dark:ring-green-400/20',
    'Medium':
        'bg-emerald-50 text-emerald-700 ring-emerald-600/20 dark:bg-emerald-400/10 dark:text-emerald-400 dark:ring-emerald-400/20',
    'High':
        'bg-orange-50 text-orange-700 ring-orange-600/20 dark:bg-orange-400/10 dark:text-orange-400 dark:ring-orange-400/20',
};

export default function PentestWidget({ allPentestWidgetData }: { allPentestWidgetData: PenTestModified[]; }) {
    return (
        <>
            {allPentestWidgetData.map((eachPenTestData) => {

                const eachPenTestBasicDetails = eachPenTestData.basicDetails;
                const pentestNameInUrl = eachPenTestBasicDetails.pentestName.toLowerCase().replace(/\s+/g, '-');
                const status = eachPenTestData.aiAnalysis ? "Completed" : (eachPenTestData.reconnaissance ? "In Progress" : "Pending");

                return (
                    <div key={eachPenTestData.pentestId} className="space-y-4">
                        {/* {eachPenTestData.orders.map((order: any) => ( */}
                        <Card key={eachPenTestData.pentestId}>
                            <div className='flex items-center justify-between'>
                                <div className="flex items-center justify-between space-x-4 sm:justify-start sm:space-x-2">
                                    {/* <Link href={`/pen-test/web-app-pen-test/${penTestNameRoute}`} className="focus:outline-none">
                                    <span className="absolute inset-0" aria-hidden={true} /> */}
                                    <h4 className="truncate text-tremor-default font-medium text-tremor-content-strong dark:text-dark-tremor-content-strong">
                                        {eachPenTestBasicDetails.pentestName}
                                    </h4>
                                    {/* </Link> */}
                                    <span
                                        className={classNames(
                                            statusColor[status],
                                            'inline-flex items-center whitespace-nowrap rounded px-1.5 py-0.5 text-tremor-label font-medium ring-1 ring-inset',
                                        )}
                                        aria-hidden={true}
                                    >
                                        {status}
                                    </span>
                                    <span
                                        className={classNames(
                                            badgeColor[eachPenTestBasicDetails.priorityLevel],
                                            'inline-flex items-center whitespace-nowrap rounded px-1.5 py-0.5 text-tremor-label font-medium ring-1 ring-inset',
                                        )}
                                        aria-hidden={true}
                                    >
                                        {eachPenTestBasicDetails.priorityLevel}
                                    </span>
                                </div>

                                <Link href={`/pen-test/web-app-pen-test/${eachPenTestBasicDetails.pentestId}_${pentestNameInUrl}`}
                                    title={`Open ${eachPenTestBasicDetails.pentestName}`}
                                    className="relative inline-flex items-center justify-center whitespace-nowrap rounded-md border px-3 py-2 text-center text-sm font-medium
                                    shadow-sm transition-all duration-100 ease-in-out disabled:pointer-events-none disabled:shadow-none border-transparent text-white 
                                    dark:text-white bg-blue-500 dark:bg-blue-500 hover:bg-blue-600 dark:hover:bg-blue-600 disabled:bg-blue-300
                                    disabled:text-white disabled:dark:bg-blue-800 disabled:dark:text-blue-400">
                                    <RiFolderOpenLine className="h-5 w-5" />
                                </Link>
                            </div>

                            <div className="mt-4 flex gap-4 justify-start w-full">

                                <div className='w-1/3 flex flex-col gap-6 border border-gray-200 dark:border-gray-700 p-2 rounded-md'>
                                    <div className="flex gap-3">
                                        <RiCrosshairLine className="h-5 w-5 text-gray-400" />
                                        <div>
                                            <p className="text-sm text-gray-500">Scope</p>
                                            <p className="text-sm font-medium text-tremor-content-strong dark:text-dark-tremor-content-strong">{eachPenTestBasicDetails.scope}</p>
                                        </div>
                                    </div>
                                    <div className="flex gap-3">
                                        <RiMoneyCnyBoxFill className="h-5 w-5 text-gray-400" />
                                        <div>
                                            <p className="text-sm text-gray-500">Testing Type</p>
                                            <p className="text-sm font-medium text-tremor-content-strong dark:text-dark-tremor-content-strong">{eachPenTestBasicDetails.testingType}</p>
                                        </div>
                                    </div>
                                    <div className="flex gap-3">
                                        <RiUserLine className="h-5 w-5 text-gray-400" />
                                        <div>
                                            <p className="text-sm text-gray-500">Created By</p>
                                            <p className="text-sm font-medium text-tremor-content-strong dark:text-dark-tremor-content-strong">{eachPenTestBasicDetails.createdBy.userName}</p>
                                        </div>
                                    </div>
                                </div>


                                <div className='w-1/2 flex flex-col gap-6 justify-between border border-gray-200 dark:border-gray-700 p-2 rounded-md'>
                                    <div className="flex gap-3">
                                        <RiCalendarScheduleLine className="h-5 w-5 text-gray-400" />
                                        <div>
                                            <p className="text-sm text-gray-500">Start Date</p>
                                            <p className="text-sm font-medium text-tremor-content-strong dark:text-dark-tremor-content-strong">{format(eachPenTestBasicDetails.startDate, "dd-MMM-yyyy HH:mm")}</p>
                                        </div>
                                    </div>
                                    <div className="flex gap-3">
                                        <RiCalendarScheduleLine className="h-5 w-5 text-gray-400" />
                                        <div>
                                            <p className="text-sm text-gray-500">End Date</p>
                                            <p className="text-sm font-medium text-tremor-content-strong dark:text-dark-tremor-content-strong">{format(eachPenTestBasicDetails.endDate, "dd-MMM-yyyy HH:mm")}</p>
                                        </div>
                                    </div>
                                    <div className="flex gap-3">
                                        <RiTimeZoneLine className="h-5 w-5 text-gray-400" />
                                        <div>
                                            <p className="text-sm text-gray-500">Time Zone</p>
                                            <p className="text-sm font-medium text-tremor-content-strong dark:text-dark-tremor-content-strong">{eachPenTestBasicDetails.timeZone}</p>
                                        </div>
                                    </div>
                                </div>

                                <div>
                                    <Callout variant="default" title="Pen Test Description" icon={RiInformationLine}>
                                        {eachPenTestBasicDetails.pentestDescription}
                                    </Callout>
                                </div>
                            </div>
                            <Divider />
                            <div className="block sm:flex sm:items-center sm:justify-between sm:space-x-2">
                                <div className="flex items-center space-x-2">
                                    <ProgressCircle
                                        value={(3 / 6) * 100}
                                        radius={9}
                                        strokeWidth={3.5}
                                    />
                                    <p className="text-tremor-default font-medium text-tremor-content-strong dark:text-dark-tremor-content-strong">
                                        Current Status [ Planning ]
                                    </p>
                                </div>
                                <p className="mt-2 text-tremor-default text-tremor-content dark:text-dark-tremor-content sm:mt-0">
                                    Updated {formatDistanceToNowStrict(new Date(eachPenTestData.lastUpdated), { addSuffix: true })}
                                </p>
                            </div>
                        </Card>
                    </div>
                )
            })}
        </>
    );
}