import React from "react";

import { RenderAppBreadcrumb } from "@/components/app-breadcrumb";
import { fetchData } from "@/utils/api";
import { redirect } from "next/navigation";

export async function fetchSelectedPentestData(pentestId: string) {
    const fetchedData = await fetchData("configured_pentest", "id", [{ column: "pentestid", value: pentestId }], null);
    return fetchedData;
}

export default async function PenTestConfiguration({
    params,
}: {
    params: Promise<{ pentestIdName: string }>;
}) {

    const pentestIdName = (await params).pentestIdName;
    const [pentestId, pentestNameInUrl] = pentestIdName.split("_");
    const pentestName = pentestNameInUrl.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');

    console.log("Pen Test URL: ", pentestIdName);

    // const selectedPentestData: PenTestDefault[] = await fetchSelectedPentestData(pentestId) ? (await fetchSelectedPentestData(pentestId)).data : [];
    // const selectedPentestDataFormatted: PenTestModified = {
    //     userId: selectedPentestData[0].userid,
    //     pentestId: selectedPentestData[0].pentestid,
    //     pentestType: selectedPentestData[0].pentest_type,
    //     basicDetails: { ...selectedPentestData[0].basic_details },
    //     reconnaissance: selectedPentestData[0].reconnaissance,
    //     vulnerabilityScanning: selectedPentestData[0].vulnerability_scanning,
    //     exploitation: selectedPentestData[0].exploitation,
    //     postExploitation: selectedPentestData[0].post_exploitation,
    //     aiAnalysis: selectedPentestData[0].ai_analysis,
    //     lastUpdated: selectedPentestData[0].last_updated,
    // };
    // console.log("Pentest Id: ", pentestId, "; Pentest Data: ", selectedPentestDataFormatted);

    return (
        <>
            <RenderAppBreadcrumb
                breadcrumb={{
                    level: 0,
                    title: "Penetration Testing",
                    href: "/pen-test",
                }}
            />
            <RenderAppBreadcrumb
                breadcrumb={{
                    level: 1,
                    title: "Web Application Penetration Testing",
                    href: "/pen-test/web-app-pen-test",
                }}
            />
            <RenderAppBreadcrumb
                breadcrumb={{
                    level: 2,
                    title: pentestName,
                    href: `/pen-test/web-app-pen-test/${pentestIdName}`,
                }}
            />

            {/* <div className="flex flex-col h-full overflow-hidden">
                <div className="flex items-center justify-between pb-4">
                    <h2 className="text-widgetHeader">{pentestName}</h2>
                </div>

                <div className="flex-1 flex flex-col overflow-hidden">
                    <PentestTabs pentestIdName={pentestIdName} pentestData={selectedPentestDataFormatted} />
                </div>
            </div> */}
            {redirect(`/pen-test/web-app-pen-test/${pentestIdName}/planning`)}
        </>
    );
}
