import { LucideIcon } from 'lucide-react';
import React from 'react';


interface MetricCardProps {
  title: string;
  value: string;
  icon: LucideIcon;
  trend?: {
    value: string;
    positive: boolean;
  };
  riskLevel?: 'low' | 'medium' | 'high' | 'critical';
}

const getRiskColor = (level?: string) => {
  switch (level) {
    case 'low': return 'text-green-400 bg-green-400/10';
    case 'medium': return 'text-yellow-400 bg-yellow-400/10';
    case 'high': return 'text-orange-400 bg-orange-400/10';
    case 'critical': return 'text-red-400 bg-red-400/10';
    default: return 'text-cyan-400 bg-cyan-400/10';
  }
};

export const MetricCard: React.FC<MetricCardProps> = ({
  title,
  value,
  icon: Icon,
  trend,
  riskLevel
}) => {
  return (
    <div className=" border  rounded-xl p-6  transition-all duration-200 h-32 flex flex-col justify-center">
      <div className="flex items-center justify-between">
        <div className="flex items-center space-x-3">
          <div className={`p-2 rounded-lg ${getRiskColor(riskLevel)}`}>
            <Icon className="h-5 w-5" />
          </div>
          <div>
            <p className=" text-sm font-medium">{title}</p>
            <p className=" text-2xl font-bold">{value}</p>
          </div>
        </div>
        {trend && (
          <div className={`text-sm font-medium ${trend.positive ? 'text-green-400' : 'text-red-400'}`}>
            {trend.positive ? '+' : ''}{trend.value}
          </div>
        )}
      </div>
    </div>
  );
};