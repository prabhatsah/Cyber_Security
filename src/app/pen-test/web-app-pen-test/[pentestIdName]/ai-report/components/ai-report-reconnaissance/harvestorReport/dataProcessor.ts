import { HostData, ScanData, URLData } from "./ScanData";


export const rawScanData: ScanData = {
  target: 'keross.com',
  asns: ['AS13335', 'AS14618', 'AS15169', 'AS16509', 'AS174', 'AS45820', 'AS8075'],
  urls: [
    'https://accounts.google.com/v3/signin/identifier?continue=https%3A%2F%2Fdocs.google.com%2Fa%2Fkeross.com%2F&faa=1&followup=https%3A%2F%2Fdocs.google.com%2Fa%2Fkeross.com%2F&hd=keross.com&ifkv=ASKV5MgEu03g2CnVJl0IxNiCay7ROIAi1wD07l_8qahHOjoOPxc3-Ekx-ytQzvPFSLsVdaoh5cBy&osid=1&rip=1&sacu=1&flowName=GlifWebSignIn&flowEntry=ServiceLogin&dsh=S2117141128%3A1746581914008284',
    'https://ikon-dev.keross.com/portal/ikon/login.html',
    'https://ikon-dev.keross.com/portal/smartfm/login.html',
    'https://keross.com/',
    'https://keross.com/?utm_medium=email&_hsmi=100926223&_hsenc=p2ANqtz-8N86ioAYbrzPew7bJ4UewVkTlHV5wwOGmScXkNlUgRXfwx0VAmz2DfwKcRTCNjcpzjRRPAxl8uvtIq3URtCkEQzxMeER9ZEaTV5jw1R8xfpdt33Dg&utm_content=100926223&utm_source=hs_email',
    'https://keross.com/?utm_medium=email&_hsmi=100926223&_hsenc=p2ANqtz-94lJzZIcKWLoFRo9Leml4KZbM2n86wPIw049DMtTlkVwcJC8kTNCqsfUs24L8UZQCqihmD5GkiF4l3Vs75oTUCOhCIdxudhTrTMf1yaBg86PRESBA&utm_content=100926223&utm_source=hs_email',
    'https://keross.com/?utm_medium=email&_hsmi=100926223&_hsenc=p2ANqtz-_tsZ_FGJmGT41g1K6CuLwOXsKORaL4pf5NvwCxOSsshmxWmq4WCxgHsaRT6OCGB5J5InpZ-OMEZKZockRc9_TtYJ7BEyZTAyE1C4bxJh7gcPMKJVY&utm_content=100926223&utm_source=hs_email',
    'https://keross.com/?utm_source=hs_email&utm_medium=email&utm_content=100926223&_hsmi=100926223&_hsenc=p2ANqtz-_G_Og-o1A4JnLLeiPXfXlugtpe_WNfcYeZkHyKCYPFykToRjErJwJaiSn5u1THxnlcMCzvVR8rsSbY1MIahPhoy4SZI1qHOq2zht0ufppCwh-586w',
    'https://www.keross.com/'
  ],
  linkedinLinks: [],
  ips: [
    '14.98.103.205', '142.251.10.84', '15.197.142.173', '23.227.38.74', '3.33.152.147',
    '34.249.200.254', '38.105.215.140', '44.242.99.40', '49.249.177.29', '51.104.28.64',
    '52.206.163.162', '52.42.122.102', '54.68.171.176', '75.2.70.75', '77.68.22.50',
    '77.68.29.90', '77.68.48.58', '88.208.240.229', '99.83.190.102'
  ],
  emails: ['asiapac@keross.com', 'info@keross.com'],
  people: [],
  hosts: [
    '*.workspace.ikoncloud-dev.keross.com:77.68.48.96',
    'demo.ikon.keross.com', 'demo.ikon.keross.com:213.171.208.122', 'demo.ikon.keross.com:77.68.22.50',
    'docs.keross.com', 'ikon-dev.keross.com', 'ikon-dev.keross.com:14.98.103.205',
    'ikon-dev.keross.com:49.249.177.29', 'ikon-lab.keross.com', 'ikon-lab.keross.com:49.249.177.27',
    'ikon-uat.keross.com', 'ikon-uat.keross.com:64:ff9b::58d0:f0e5', 'ikon-uat.keross.com:88.208.240.229',
    'ikon-vpm.keross.com', 'ikon-vpm.keross.com:49.249.177.30', 'ikon.keross.com',
    'ikon.keross.com:109.228.39.109', 'ikon.keross.com:77.68.29.90', 'ikon.keross.com:77.68.48.58',
    'ikon_uat.keross.com:64:ff9b::4d44:5b7d', 'ikon_uat.keross.com:77.68.91.125',
    'ikoncloud-dev.keross.com', 'ikoncloud-uat.keross.com', 'ikoncloud-uat.keross.com:77.68.30.54',
    'ikoncloud.keross.com', 'ikoncloud.keross.com:109.228.55.234', 'ikoncloud.keross.com:77.68.30.190',
    'ikonv2.keross.com:109.228.22.176', 'vision247.keross.com:64.34.87.182',
    'web2.keross.com', 'web2.keross.com:38.105.215.140', 'workspace.ikoncloud-dev.keross.com'
  ]
};

export const processHosts = (hosts: string[]): HostData[] => {
  return hosts.map(host => {
    const [hostname, ip] = host.split(':');
    let type: HostData['type'] = 'unknown';
    let riskLevel: HostData['riskLevel'] = 'low';

    // Categorize by hostname patterns
    if (hostname.includes('-dev') || hostname.includes('dev.')) {
      type = 'development';
      riskLevel = 'high';
    } else if (hostname.includes('-uat') || hostname.includes('uat.') || hostname.includes('_uat')) {
      type = 'staging';
      riskLevel = 'medium';
    } else if (hostname.includes('-lab') || hostname.includes('lab.')) {
      type = 'testing';
      riskLevel = 'medium';
    } else if (hostname.includes('demo.')) {
      type = 'testing';
      riskLevel = 'high';
    } else if (hostname === 'keross.com' || hostname === 'www.keross.com') {
      type = 'production';
      riskLevel = 'low';
    } else {
      type = 'production';
      riskLevel = 'medium';
    }

    return {
      hostname,
      ip,
      type,
      riskLevel
    };
  });
};

export const processURLs = (urls: string[]): URLData[] => {
  return urls.map(url => {
    let type: URLData['type'] = 'other';
    let riskLevel: URLData['riskLevel'] = 'low';

    if (url.includes('login')) {
      type = 'login';
      riskLevel = 'critical';
    } else if (url.includes('portal')) {
      type = 'portal';
      riskLevel = 'high';
    } else if (url.includes('docs')) {
      type = 'docs';
      riskLevel = 'low';
    } else if (url.includes('api')) {
      type = 'api';
      riskLevel = 'medium';
    } else if (url === 'https://keross.com/' || url === 'https://www.keross.com/') {
      type = 'main';
      riskLevel = 'low';
    }

    return {
      url,
      type,
      riskLevel
    };
  });
};

export const getASNProviders = (asns: string[]) => {
  const providers: { [key: string]: string } = {
    'AS13335': 'Cloudflare',
    'AS14618': 'Amazon Web Services',
    'AS15169': 'Google LLC',
    'AS16509': 'Amazon Web Services',
    'AS174': 'Cogent Communications',
    'AS45820': 'Unknown',
    'AS8075': 'Microsoft Corporation'
  };

  return asns.map(asn => ({
    asn,
    provider: providers[asn] || 'Unknown'
  }));
};

export const calculateRiskScore = (): number => {
  const hosts = processHosts(rawScanData.hosts);
  const urls = processURLs(rawScanData.urls);
  
  let score = 0;
  const maxScore = 100;

  // High risk factors
  const devHosts = hosts.filter(h => h.type === 'development').length;
  const loginUrls = urls.filter(u => u.type === 'login').length;
  const exposedEmails = rawScanData.emails.length;

  // Calculate risk
  score += devHosts * 15; // Development environments are high risk
  score += loginUrls * 20; // Login pages are critical
  score += exposedEmails * 5; // Email exposure
  score += Math.min(rawScanData.hosts.length * 2, 30); // Too many exposed hosts

  return Math.min(score, maxScore);
};