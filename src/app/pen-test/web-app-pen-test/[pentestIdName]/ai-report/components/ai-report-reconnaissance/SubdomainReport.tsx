import {
    Table,
    TableBody,
    TableCell,
    TableHead,
    TableHeaderCell,
    TableRoot,
    TableRow,
} from "@/components/Table";
import React from "react";
import { Bar, BarChart, Tooltip, XAxis, YAxis } from "recharts";

interface Domain {
    fqdn: string;
    ipAddress: string;
    category: string;
    notes?: string;
}

type SubdomainReportProps = {
    domains: Domain[];
};
console.log("From subdomain module")
const amassCounts = [
    { name: "Critical", count: 5 },
    { name: "High", count: 6 },
    { name: "Medium", count: 8 },
    { name: "Low", count: 3 },
    { name: "Info", count: 2 },
];
const COLORS = [
    '#EF476F',  // Vivid Pink
    '#FFD166',  // Bright Amber
    '#06D6A0',  // Fresh Mint
    '#FF6F61',  // Deep Sky
    '#00B4D8'   // Rich Navy
];

export default function SubdomainReport({ domains, domainDescription }: SubdomainReportProps) {
    // const freq: Record<string, number> = {};
    // type Row = [string, string, string, string];
    // for (const [, , category] of domains) {
    //     freq[category] = (freq[category] || 0) + 1;
    // }

    // // 4) Turn it into an array of { name, value }
    // interface NameValue { name: string; value: number; }
    // const result: NameValue[] = Object.entries(freq).map(
    //     ([name, count]) => ({ name, value: count })
    // );

    return (
        <div className="flex-1 overflow-y-auto">
            <p className="text-lg">Domain & Subdomain Landscape</p>
            <p>{domainDescription}</p>

            <div className="flex">
                <div className="lg:w-[80%] w-full max-h-64 overflow-y-auto">
                    <TableRoot>
                        <Table>
                            <TableHead>
                                <TableRow>
                                    <TableHeaderCell>FQDN</TableHeaderCell>
                                    <TableHeaderCell>IP Address</TableHeaderCell>
                                    <TableHeaderCell>Category</TableHeaderCell>
                                    <TableHeaderCell>Notes / Hosting ASN Hint</TableHeaderCell>
                                </TableRow>
                            </TableHead>

                            <TableBody>
                                {domains.map(({ fqdn, ipAddress, category, notes }, idx) => (
                                    <TableRow key={fqdn ?? idx}>
                                        <TableCell>{fqdn}</TableCell>
                                        <TableCell>{ipAddress || "-"}</TableCell>
                                        <TableCell>{category || "-"}</TableCell>
                                        <TableCell>{notes || "-"}</TableCell>
                                    </TableRow>
                                ))}

                            </TableBody>
                        </Table>
                    </TableRoot>
                </div>
                <div className="lg:w-[20%] w-full relative ">
                    <BarChart data={amassCounts} margin={{ top: 10, right: 30, bottom: 5, left: 0 }}>
                        <XAxis dataKey="name" />
                        <YAxis />
                        <Tooltip />
                        <Bar dataKey="count" fill={COLORS[0]} />
                    </BarChart>
                </div>
            </div>


        </div>
    );
}
