import {
    Table,
    TableBody,
    TableCell,
    TableHead,
    TableHeaderCell,
    TableRoot,
    TableRow,
} from "@/components/Table";
import { Globe } from "lucide-react";
import React from "react";
import { Bar, BarChart, Tooltip, XAxis, YAxis, ResponsiveContainer, Legend } from "recharts";

interface Domain {
    fqdn: string;
    ipAddress: string;
    category: string;
    notes?: string;
}

interface SubdomainReportProps {
    domains: Domain[];
    domainDescription?: string;
}

export default function SubdomainReport({ domains, domainDescription = '' }: SubdomainReportProps) {
    const freq: Record<string, number> = {};
    console.log("From Subdomain")
    domains.forEach(domain => {
        const cat = domain.category || '-';
        freq[cat] = (freq[cat] || 0) + 1;
    });

    interface NameValue { name: string; value: number; }
    const chartData: NameValue[] = Object.entries(freq).map(
        ([name, value]) => ({ name, value })
    );

    return (
        <div className="flex-1 overflow-y-auto">
            <h2 className="m-2 mt-4 flex gap-2 items-center" style={{ fontFamily: 'Inter' }}><Globe size={22} className=" p-1 rounded-lg bg-yellow-600" />Domain & Subdomain Landscape</h2>


            {domainDescription && <p className="m-2">{domainDescription}</p>}

            <div className="flex">
                {domains.length > 0 ? (
                    <div className="lg:w-[75%] w-full max-h-64 overflow-y-auto">
                        <TableRoot>
                            <Table>
                                <TableHead>
                                    <TableRow>
                                        <TableHeaderCell>FQDN</TableHeaderCell>
                                        <TableHeaderCell>IP Address</TableHeaderCell>
                                        <TableHeaderCell>Category</TableHeaderCell>
                                        <TableHeaderCell>Notes / Hosting ASN Hint</TableHeaderCell>
                                    </TableRow>
                                </TableHead>

                                <TableBody>
                                    {domains.map(({ fqdn, ipAddress, category, notes }, idx) => (
                                        <TableRow key={fqdn || idx}>
                                            <TableCell>{fqdn}</TableCell>
                                            <TableCell>{ipAddress || "-"}</TableCell>
                                            <TableCell>{category || "-"}</TableCell>
                                            <TableCell>{notes || "-"}</TableCell>
                                        </TableRow>
                                    ))}
                                </TableBody>
                            </Table>
                        </TableRoot>
                    </div>
                ) : (
                    <p className="text-table-tableDesc italic text-sm">No records found</p>
                )}

                {/* margin={{ top: 10, right: 30, bottom: 5, left: 0 }} */}
                <div className="lg:w-[25%] w-full relative">
                    {chartData.length > 0 ? (
                        <ResponsiveContainer width="100%" height={300}>
                            <BarChart
                                data={chartData}
                                margin={{ top: 10, right: 30, bottom: 60, left: 0 }}
                            >
                                <XAxis
                                    dataKey="name"
                                    interval={0}
                                    tick={{ angle: -45, textAnchor: "end" } as any}
                                    height={60}
                                />
                                <YAxis />
                                <Tooltip />
                                <Bar dataKey="value" fill="#22c55e" />
                            </BarChart>
                        </ResponsiveContainer>
                    ) : (
                        <p className="text-table-tableDesc italic text-sm">No records found</p>
                    )}

                </div>
            </div>
        </div >
    );
}
