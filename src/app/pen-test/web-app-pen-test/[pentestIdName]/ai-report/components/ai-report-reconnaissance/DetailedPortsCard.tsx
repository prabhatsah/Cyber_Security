import React from 'react';
import { Card, Text } from '@tremor/react';
import { Lock, Globe, Shield } from 'lucide-react';
import {
    Table,
    TableBody,
    TableCell,
    TableHead,
    TableHeaderCell,
    TableRoot,
    TableRow,
} from "@/components/Table";


interface PortDetail {
    port: number;
    protocol: string;
    state: string;
    service: string;
    version: string;
}

interface PortInfo {
    port: number;
    service: string;
    icon: React.ReactNode;
    title: string;
    description: string;
    color: string;
}

interface DetailedPortsProps {
    ports: PortDetail[];
}

export default function DetailedPortsCard({ ports }: DetailedPortsProps) {
    // Define port information with icons and descriptions
    const portInfoMap: Record<number, PortInfo> = {
        22: {
            port: 22,
            service: 'SSH',
            icon: <Lock className="w-6 h-6" />,
            title: 'Port 22 (SSH)',
            description: 'Provides secure remote access. Critical to ensure strong authentication (e.g., key-based), disable root login, and consider IP restrictions.',
            color: 'text-orange-400'
        },
        80: {
            port: 80,
            service: 'HTTP',
            icon: <Globe className="w-6 h-6" />,
            title: 'Port 80 (HTTP)',
            description: 'Serves unencrypted web traffic. Typically redirects to HTTPS (port 443). Verify redirection is in place.',
            color: 'text-blue-400'
        },
        443: {
            port: 443,
            service: 'HTTPS',
            icon: <Shield className="w-6 h-6" />,
            title: 'Port 443 (HTTPS)',
            description: 'Serves encrypted web traffic. Primary web access point. Ensure robust SSL/TLS configuration (strong ciphers, HSTS).',
            color: 'text-green-400'
        }
    };

    return (
        <Card className=" p-6">
            <Text className="text-xl text-blue-300 mb-6">Detailed Open Ports</Text>

            {/* Table Section */}
            <div className="mb-8 overflow-hidden rounded-lg">
                <TableRoot className="">
                    <Table>
                        <TableHead className="">
                            <TableRow>
                                <TableHeaderCell className=" font-medium">PORT</TableHeaderCell>
                                <TableHeaderCell className=" font-medium">PROTOCOL</TableHeaderCell>
                                <TableHeaderCell className=" font-medium">STATE</TableHeaderCell>
                                <TableHeaderCell className=" font-medium">SERVICE</TableHeaderCell>
                                <TableHeaderCell className="font-medium">VERSION</TableHeaderCell>
                            </TableRow>
                        </TableHead>
                        <TableBody>
                            {ports.map((port, index) => (
                                <TableRow key={index} className="]">
                                    <TableCell className=" font-medium">{port.port}</TableCell>
                                    <TableCell className="">{port.protocol}</TableCell>
                                    <TableCell className="text-green-400">{port.state}</TableCell>
                                    <TableCell className="text-blue-400">{port.service}</TableCell>
                                    <TableCell className="">{port.version}</TableCell>
                                </TableRow>
                            ))}
                        </TableBody>
                    </Table>
                </TableRoot>
            </div>

            {/* Port Details Cards */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                {ports.map((port, index) => {
                    const portInfo = portInfoMap[port.port];
                    if (!portInfo) return null;

                    return (
                        <Card key={index} className=" border-gray-600 p-4">
                            <div className="flex items-center gap-3 mb-3">
                                <div className={portInfo.color}>
                                    {portInfo.icon}
                                </div>
                                <Text className="font-medium">{portInfo.title}</Text>
                            </div>
                            <Text className=" text-sm leading-relaxed">
                                {portInfo.description}
                            </Text>
                        </Card>
                    );
                })}
            </div>
        </Card>
    );
}