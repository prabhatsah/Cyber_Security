"use client";

import { Button } from "@/components/Button";
import { ScanLine } from "lucide-react";
import NoScanConfiguredTemplate from "../../../components/NoScanConfiguredTemplate";
import { amassScanning } from "./apis/amass/amassScanning";
import { useEffect, useState } from "react";
import { updatePentestData } from "@/app/pen-test/components/apis/configurePentestDataHandler";
import { useRouter } from "next/navigation";

export default function NoReconnaissanceDataTemplate({ pentestId, webApp }: { pentestId: string; webApp: string }) {
    const router = useRouter();
    // const [amassScanData, setAmassScanData] = useState(null);
    const updateDataAndRefresh = async (amassScanData: any) => {
        if (amassScanData) {
            const updatedColumnData = {
                activeReconnaissance: {
                    amassData: amassScanData,
                },
            };

            const pentestDataUpdateResult = await updatePentestData("reconnaissance", updatedColumnData, pentestId);

            if (pentestDataUpdateResult?.success) { // Optional: check if the update was successful
                router.refresh(); // Refresh the route after updating
            }
        }
    };
    const { initiateScan, isScanning, scanStatus } = amassScanning(webApp, updateDataAndRefresh);

    // if (amassScanData) {
    //     const updatedColumnData = {
    //         "activeReconnaissance": {
    //             "amassData": amassScanData
    //         }
    //     }

    //     const pentestDataUpdateResult = await updatePentestData("reconnaissance", updatedColumnData, pentestId);
    // }

    // useEffect(() => {

    // }, [amassScanData]);

    return (
        <>
            <div className="flex flex-col gap-4">
                <div className="flex items-center justify-end">
                    {isScanning ? (
                        <Button isLoading>Initiating</Button>
                    ) : (
                        <Button onClick={initiateScan} variant="primary" className="flex items-center gap-2">
                            <ScanLine className="h-5 w-5" />
                            Initiate Active Reconnaissance
                        </Button>
                    )}
                </div>
                {scanStatus && <p className="text-sm text-gray-500">Scan Status: {scanStatus}</p>}
                <NoScanConfiguredTemplate
                    headerText="Active Reconnaissance Not Configured Yet"
                    descriptionText="Initiate Active Reconnaissance and View the Scan Results"
                />
            </div>
        </>
    )
}