"use client";

import { Button } from "@/components/Button";
import { ScanLine } from "lucide-react";
import NoScanConfiguredTemplate from "../../../components/NoScanConfiguredTemplate";
import { activeReconScanning } from "./apis/active-recon-scanning";
import { useRouter } from "next/navigation";
import { PenTestModified } from "@/app/pen-test/web-app-pen-test/components/type";
import { useScanNotification } from "@/contexts/ScanNotificationContext";

export default function NoReconnaissanceDataTemplate({ pentestId, pentestData }: { pentestId: string; pentestData: PenTestModified }) {
    const webApp = pentestData.basicDetails.target;
    const router = useRouter();
    const { setScanNotificationData } = useScanNotification();
    const { initiateScan, isScanning } = activeReconScanning(webApp, pentestId);

    // const updateDataAndRefresh = async (amassScanData: any) => {
    //     if (amassScanData) {

    //         const updatedDataObj = {
    //             basicDetails: { ...pentestData.basicDetails },
    //             scandata: {
    //                 ...pentestData.scanData,
    //                 amass: amassScanData
    //             }
    //         }

    //         const pentestDataUpdateResult = await updatePentestData("data", updatedDataObj, pentestId);

    //         if (pentestDataUpdateResult?.success) {
    //             router.refresh();
    //         }
    //     }
    // };

    async function handleInitiateActiveRecon() {
        const scanResult = await initiateScan();
        setScanNotificationData((prevScanNotificationData) => {
            if (scanResult) return [...prevScanNotificationData, ...scanResult];

            return [...prevScanNotificationData]
        });
    }

    return (
        <>
            <div className="flex flex-col gap-4">
                {/* <div className="flex items-center justify-end">
                    {isScanning ? (
                        <Button isLoading>Initiating</Button>
                    ) : (
                        <Button onClick={handleInitiateActiveRecon} variant="primary" className="flex items-center gap-2">
                            <ScanLine className="h-5 w-5" />
                            Initiate Active Reconnaissance
                        </Button>
                    )}
                </div> */}
                <NoScanConfiguredTemplate
                    headerText="Active Reconnaissance Not Configured Yet"
                    descriptionText="Initiate Active Reconnaissance and View the Scan Results"
                />
            </div>
        </>
    )
}