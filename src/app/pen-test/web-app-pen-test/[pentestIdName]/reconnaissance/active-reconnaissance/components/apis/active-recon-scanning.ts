import { useState } from "react";
import StartScan from "@/utils/generic-start-scan";
import { getLoggedInUserProfile } from "@/ikon/utils/api/loginService";
import { ScanNotificationDataModified } from "@/components/type";

export const activeReconScanning = (target: string, pentestId: string) => {
  const [isScanning, setIsScanning] = useState(false);

  const initiateScan = async () => {
    const userId = (await getLoggedInUserProfile()).USER_ID;

    setIsScanning(true);

    try {
      let modifiedTarget =
        target[target.length - 1] === "/"
          ? target.substring(0, target.length - 1)
          : target;
      modifiedTarget = modifiedTarget.includes("https://")
        ? modifiedTarget.replace("https://", "")
        : modifiedTarget.includes("http://")
        ? modifiedTarget.replace("http://", "")
        : modifiedTarget;

      const nmapStartTime = new Date().toISOString();
      const nmapResult = await StartScan(
        userId,
        "nmap",
        modifiedTarget,
        pentestId,
        nmapStartTime
      );
      const nmapResultObj: ScanNotificationDataModified = {
        scanId: nmapResult.scan_id,
        tool: nmapResult.tool,
        target: nmapResult.target,
        startTime: nmapResult.start_time,
        endTime: "",
        status: nmapResult.status,
        pentestId: nmapResult.pentestid,
      };
      console.log("Nmap Scan Details: ", nmapResult);

      const whatWebStartTime = new Date().toISOString();
      const whatWebResult = await StartScan(
        userId,
        "whatweb",
        target,
        pentestId,
        whatWebStartTime
      );
      const whatWebResultObj: ScanNotificationDataModified = {
        scanId: whatWebResult.scan_id,
        tool: whatWebResult.tool,
        target: whatWebResult.target,
        startTime: whatWebResult.start_time,
        endTime: "",
        status: whatWebResult.status,
        pentestId: whatWebResult.pentestid,
      };
      console.log("WhatWeb Scan Details: ", whatWebResult);

      const result = [nmapResultObj, whatWebResultObj];
      console.log("Scan Details Array: ", result);
      setIsScanning(false);
      return result;
    } catch (err) {
      console.error("Error starting scan:", err);
      setIsScanning(false);
    }
  };

  return { initiateScan, isScanning };
};
