'use client';

import React, { useEffect } from 'react';
import { usePathname, useRouter } from 'next/navigation';
import Link from 'next/link';
import { Cpu, EthernetPort, LayoutDashboard, Network, } from 'lucide-react';

export default function ActiveReconnaissanceSidebar({ pentestIdName }: { pentestIdName: string; }) {
  const [pentestId, pentestNameInUrl] = pentestIdName.split("_");
  const pentestName = pentestNameInUrl.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');
  const router = useRouter();
  const pathname = usePathname();

  useEffect(() => {
    if (typeof pentestId === 'string') {
      router.push(tabData[0].href);
    }
  }, [pentestId]);

  const tabData = [
    {
      tabName: 'Overview',
      href: `/pen-test/web-app-pen-test/${pentestIdName}/reconnaissance/active-reconnaissance/overview`,
      Icon: LayoutDashboard,
    },
    {
      tabName: 'Sub Domains',
      href: `/pen-test/web-app-pen-test/${pentestIdName}/reconnaissance/active-reconnaissance/sub-domains`,
      Icon: Network,
    },
    {
      tabName: 'Open Ports',
      href: `/pen-test/web-app-pen-test/${pentestIdName}/reconnaissance/active-reconnaissance/open-ports`,
      Icon: EthernetPort,
    },
    {
      tabName: 'Technologies Detected',
      href: `/pen-test/web-app-pen-test/${pentestIdName}/reconnaissance/active-reconnaissance/technologies-detected`,
      Icon: Cpu,
    },
  ];

  return (
    <>
      <nav className="flex-1 px-2">
        <div className='space-y-1'>
          {tabData.map((eachTab) => {
            const isActive = pathname.includes(eachTab.tabName.toLowerCase().replace(/\s+/g, '-'));
            return (
              <Link
                key={eachTab.tabName}
                href={eachTab.href}
                className={`flex items-center gap-x-2.5 px-3 py-2 text-sm rounded-md
                    ${isActive ? "bg-primary text-gray-50" :
                    "text-gray-700 dark:text-gray-400 hover:bg-gray-100 hover:text-gray-900 hover:dark:text-gray-50 hover:dark:bg-gray-800"
                  }
                  `}
              >
                <eachTab.Icon className="-ml-1 size-4" aria-hidden="true" />
                {eachTab.tabName}
              </Link>
            )
          })}
        </div>
      </nav>
    </>
  );
}
