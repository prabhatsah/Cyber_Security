"use client";

import { Card, DonutChart } from "@tremor/react";
import { Label } from "@radix-ui/react-label";

// Map severity levels to Tailwind class and Tremor color names
const colorMap: Record<string, { tailwind: string; tremor: string }> = {
  Critical: { tailwind: "bg-red-900", tremor: "red" },
  High: { tailwind: "bg-red-500", tremor: "rose" },
  Medium: { tailwind: "bg-amber-500", tremor: "amber" },
  Low: { tailwind: "bg-green-800", tremor: "emerald" },
};

interface OverviewChartWidgetDataItem {
  name: string;
  amount: number;
  borderColor: string;
}

export default function OverviewChartWidget() {

  const chartData: OverviewChartWidgetDataItem[] = [
    {
      name: "Critical",
      amount: 3,
      borderColor: colorMap["Critical"].tailwind,
    },
    {
      name: "High",
      amount: 7,
      borderColor: colorMap["High"].tailwind,
    },
    {
      name: "Medium",
      amount: 17,
      borderColor: colorMap["Medium"].tailwind,
    },
    {
      name: "Low",
      amount: 23,
      borderColor: colorMap["Low"].tailwind,
    },
  ];

  return (
    <>
      <Card className="rounded-md flex flex-col gap-3 p-4">
        <Label className=" font-bold text-widget-title text-widgetHeader">Vulnerabilities Found</Label>
        <Card className="rounded-md p-2.5">
          <div className="flex flex-col justify-center h-full">
            <div className="grid grid-cols-8 gap-8 items-center">
              <div className="relative col-span-3">
                <DonutChart
                  key="active-reconnaissance-overview-chart"
                  data={chartData}
                  category="amount"
                  index="name"
                  showTooltip={false}
                  className="w-full h-28 hide-donut-center"
                  colors={[
                    colorMap["Critical"].tremor,
                    colorMap["High"].tremor,
                    colorMap["Medium"].tremor,
                    colorMap["Low"].tremor,
                  ]}
                />
                {/* <div className="flex flex-wrap justify-center gap-4 mt-2">
                  <span className="inline-flex items-center space-x-2 rounded-md bg-tremor-background py-1 pl-2.5 pr-1 ring-1 ring-inset ring-tremor-ring">
                    <span className="text-xs font-semibold text-gray-700">
                      Reputation
                    </span>
                    <span
                      className={`rounded-md text-xs px-2 font-bold ${reputationCss}`}
                    >
                      {reputation}
                    </span>
                  </span>
                </div> */}
              </div>
              <div className="col-span-5 py-6">
                {/* <p className="text-xs">Levels</p > */}
                <ul className="space-y-1 grid grid-cols-1 sm:grid-cols-2 gap-4 mt-2">
                  {chartData.map((item) => (
                    <li key={item.name} className="flex space-x-3">
                      <span
                        className={`${item.borderColor} w-1 shrink-0 rounded`}
                      />
                      <div>
                        <p className="text-sm font-medium text-widget-mainHeader">
                          {item.amount}
                        </p>
                        <p className="mt-0.5 whitespace-nowrap text-sm text-widget-mainDesc">
                          {item.name}
                        </p>
                      </div>
                    </li>
                  ))}
                </ul>
              </div>
            </div>
          </div>
        </Card>
      </Card>
    </>
  );
}
