import { Globe, Radio, Server } from "lucide-react";
import { aMassData } from "../components/ReconnaissanceDummyData";
import ASNTable from "./components/ASNTable";
import IPTable from "./components/IPTable";
import OverviewComponent from "./components/OverviewComponent";
import SubDomainsTable from "./components/SubDomainsTable";
import SubDomainsOverview from "./components/SubDomainsOverview";
import { Card, Title } from "@tremor/react";

// Extract useful data
const subDomains = aMassData.subdomains
    .filter((item) => item && item.trim() !== "") // Filter out blank items
    .map((item) => ({
        name: item.split(" --> ")[0].trim(),
        recordType: item.split(" --> ")[1].trim(),
        target: item.split(" --> ")[2].trim(),
    }));

const ipAddresses = aMassData.subdomains
    .filter((item) => item.includes("(IPAddress)"))
    .map((item) => {
        const parts = item.split(" --> ");
        return {
            ip: parts[2] ? parts[2].split(" ")[0].trim() : "", // Ensure the second part exists
            subdomain: parts[0] ? parts[0].trim() : "", // Ensure the first part exists
        };
    });

const asnInfo = aMassData.subdomains
    .filter((item) => item.includes("(ASN)"))
    .map((item) => {
        const parts = item.split(" --> ");
        return {
            asn: parts[0] ? parts[0].trim() : "", // Ensure the first part exists
            relationshipType: parts[1],
            value: parts[2],
        };
    });

const subDomainOverviewData = [
    {
        title: "Total Subdomains Discovered",
        value: subDomains.length,
        Icon: Globe
    },
    {
        title: "IP Addresses Found",
        value: ipAddresses.length,
        Icon: Radio
    },
    {
        title: "ASNs Identified",
        value: asnInfo.length,
        Icon: Server
    }
];

export default function ActiveReconnaissanceSubDomains() {
    return (
        <>
            {/* <OverviewComponent
                subDomains={subDomains.length}
                ipAddresses={ipAddresses.length}
                asnInfo={asnInfo.length}
            /> */}
            <div className="flex flex-col gap-3">
                <SubDomainsOverview subDomainOverviewData={subDomainOverviewData} />
                <Card className="flex flex-col gap-3 p-4 rounded-md">
                    <Title className="font-bold text-widget-title text-widgetHeader">Sub Domains Discovered</Title>
                    <SubDomainsTable subDomains={subDomains} />
                </Card>
                <div className="flex gap-3">
                    <Card className="flex flex-col gap-3 p-4 rounded-md">
                        <Title className="font-bold text-widget-title text-widgetHeader">IP Addresses</Title>
                        <IPTable ipAddresses={ipAddresses} />
                    </Card>
                    <Card className="flex flex-col gap-3 p-4 rounded-md">
                        <Title className="font-bold text-widget-title text-widgetHeader">ASN Information</Title>
                        <ASNTable asnInfo={asnInfo} />
                    </Card>
                </div>
            </div>
        </>
    )
}