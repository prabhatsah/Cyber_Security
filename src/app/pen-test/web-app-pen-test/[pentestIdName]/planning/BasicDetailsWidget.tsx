"use client";

import { Card } from '@tremor/react';
import React, { useEffect } from 'react';
import { format } from 'date-fns';
import { BasicDetails } from '../../components/type';
import { usePentestContext } from '../components/PentestContext';
import GlobalLoader from '@/components/GlobalLoader';

const getPriorityColor = (priority: string) => {
    switch (priority.toLowerCase()) {
        case 'high':
            return 'red';
        case 'medium':
            return 'orange';
        case 'low':
            return 'green';
        default:
            return 'gray';
    }
};

const getSecurityLevelColor = (level: string) => {
    switch (level.toLowerCase()) {
        case 'high':
            return 'green';
        case 'medium':
            return 'yellow';
        case 'low':
            return 'red';
        default:
            return 'gray';
    }
};


const colorMap = {
    'Low': 'bg-emerald-50 text-emerald-900 ring-emerald-600/30 dark:bg-emerald-400/10 dark:text-emerald-400 dark:ring-emerald-400/20',
    'Medium': 'bg-yellow-50 text-yellow-900 ring-yellow-600/30 dark:bg-yellow-400/10 dark:text-yellow-500 dark:ring-yellow-400/20',
    'High': 'bg-red-50 text-red-900 ring-red-600/20 dark:bg-red-400/10 dark:text-red-400 dark:ring-red-400/20',
    'default': 'bg-blue-50 text-blue-900 ring-blue-500/30 dark:bg-blue-400/10 dark:text-blue-400 dark:ring-blue-400/30',
}

export default function BasicDetailsWidget({ pentestIdName }: { pentestIdName: string; }) {
    const [pentestId, pentestName] = pentestIdName.split("_");
    const { pentestData, loading, error, setPentestId } = usePentestContext();

    useEffect(() => {
        if (typeof pentestId === 'string') {
            setPentestId(pentestId);
        }
    }, [pentestId]);

    if (error) return <div>{error}</div>;
    if (!pentestData && !loading) return <div></div>;
    if (loading || !pentestData) return <GlobalLoader />;

    const pentestSubPartData: BasicDetails = { ...pentestData.basicDetails };

    return (
        <div className="flex flex-col gap-4">
            <div className="flex gap-4">
                {/* Test Details Card */}
                <Card className="p-6 rounded-md">
                    <h3 className="mb-4 text-lg font-medium text-gray-800 dark:text-gray-200">
                        Test Details
                    </h3>
                    <div className="space-y-4">
                        <div>
                            <label className="text-sm font-medium text-gray-500 dark:text-gray-400">
                                Web App Name
                            </label>
                            <p className="mt-1 text-gray-800 dark:text-gray-200">
                                {pentestSubPartData.target}
                            </p>
                        </div>
                        <div>
                            <label className="text-sm font-medium text-gray-500 dark:text-gray-400">
                                Testing Type
                            </label>
                            <p className="mt-1 text-gray-800 dark:text-gray-200">
                                {pentestSubPartData.testingType}
                            </p>
                        </div>
                        <div>
                            <label className="text-sm font-medium text-gray-500 dark:text-gray-400">
                                Scope
                            </label>
                            <p className="mt-1 text-gray-800 dark:text-gray-200">
                                {pentestSubPartData.scope}
                            </p>
                        </div>
                        <div className='flex flex-col items-start justify-between gap-2'>
                            <label className="text-sm font-medium text-gray-500 dark:text-gray-400">
                                Priority Level
                            </label>
                            {/* <p className="mt-1 text-gray-800 dark:text-gray-200">
                                <Badge color={getPriorityColor(pentestSubPartData.priorityLevel)} size="lg">
                                    {pentestSubPartData.priorityLevel}
                                </Badge>
                            </p> */}

                            <span className={`${colorMap[pentestSubPartData.priorityLevel as keyof typeof colorMap]} inline-flex items-center whitespace-nowrap rounded px-1.5
                                py-0.5 text-tremor-label font-medium ring-1 ring-inset`}>
                                {pentestSubPartData.priorityLevel}
                            </span>
                        </div>

                        <div className='flex flex-col items-start justify-between gap-2'>
                            <label className="text-sm font-medium text-gray-500 dark:text-gray-400">
                                Security Level
                            </label>
                            {/* <p className="mt-1 text-gray-800 dark:text-gray-200">
                                <Badge color={getSecurityLevelColor(pentestSubPartData.securityLevel ?? "Low")} size="lg">
                                    {pentestSubPartData.securityLevel}
                                </Badge>
                            </p> */}


                            <span className={`${pentestSubPartData.securityLevel ? colorMap[pentestSubPartData.securityLevel as keyof typeof colorMap] : colorMap['default']}
                                inline-flex items-center whitespace-nowrap rounded px-1.5 py-0.5 text-tremor-label font-medium ring-1 ring-inset`}>
                                {pentestSubPartData.securityLevel ?? "N/A"}
                            </span>
                        </div>
                    </div>
                </Card>

                {/* Timeline Card */}
                <Card className="p-6 rounded-md">
                    <h3 className="mb-4 text-lg font-medium text-gray-800 dark:text-gray-200">
                        Timeline
                    </h3>
                    <div className="space-y-4">
                        <div>
                            <label className="text-sm font-medium text-gray-500 dark:text-gray-400">
                                Start Date
                            </label>
                            <p className="mt-1 text-gray-800 dark:text-gray-200">
                                {format(new Date(pentestSubPartData.startDate), "dd-MMM-yyyy HH:mm")}
                            </p>
                        </div>
                        <div>
                            <label className="text-sm font-medium text-gray-500 dark:text-gray-400">
                                End Date
                            </label>
                            <p className="mt-1 text-gray-800 dark:text-gray-200">
                                {format(new Date(pentestSubPartData.endDate), "dd-MMM-yyyy HH:mm")}
                            </p>
                        </div>
                        <div>
                            <label className="text-sm font-medium text-gray-500 dark:text-gray-400">
                                Time Zone
                            </label>
                            <p className="mt-1 text-gray-800 dark:text-gray-200">
                                {pentestSubPartData.timeZone}
                            </p>
                        </div>
                    </div>
                </Card>
            </div>

            {/* Objectives Card */}
            <Card className="p-6 rounded-md">
                <h3 className="mb-4 text-lg font-medium text-gray-800 dark:text-gray-200">
                    Objectives
                </h3>
                <p className="text-gray-600 dark:text-gray-400">
                    {/* Conduct a comprehensive security assessment of the web application to
                    identify vulnerabilities, assess risks, and provide recommendations
                    for remediation. The assessment will focus on: */}
                    {pentestSubPartData.pentestDescription}
                </p>
                {/* <ul className="mt-4 list-inside list-disc space-y-2 text-gray-600 dark:text-gray-400">
                    <li>Authentication and authorization mechanisms</li>
                    <li>Input validation and data sanitization</li>
                    <li>Session management</li>
                    <li>API security</li>
                    <li>Infrastructure security</li>
                </ul> */}
            </Card>
        </div>
    );
}
