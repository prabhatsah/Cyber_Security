import React from 'react';
import { View, Text, StyleSheet, Image } from '@react-pdf/renderer';
import WaterMarkedPage from './WaterMarkedPage';
import { AIReportData } from '../../../components/type';

const domainEnumerationUrl = '/cyber-security/assets/images/domain_enumeration.png';
const portsSummaryUrl = '/cyber-security/assets/images/ports_summary.png';
const networkOverviewUrl = '/cyber-security/assets/images/network_overview.png';

const styles = StyleSheet.create({
    pageContent: {
        flexDirection: 'row',
        fontSize: 11,
        fontFamily: 'Helvetica',
        color: '#111827',
        height: '100%',
    },
    leftPanel: {
        width: '30%',
        backgroundColor: '#4f46e5',
        justifyContent: 'space-between',
        zIndex: -1111111,
    },
    leftTextContainer: {
        marginTop: 40,
        padding: 10,
    },
    characterBig: {
        position: 'absolute',
        top: 250,
        bottom: 0,
        left: -90,
        fontSize: 540,
        color: '#fff',
        opacity: 0.2,
    },
    leftTitle: {
        fontSize: 18,
        color: '#fff',
        marginBottom: 15,
        lineHeight: 1.5,
    },
    rightPanel: {
        flexDirection: 'column',
        justifyContent: 'space-between',
        paddingLeft: 20,
        width: '70%',
        position: 'relative',
    },
    paragraphTitle: {
        fontSize: 10,
        fontWeight: 'bold',
        color: '#7e7e7f',
        textAlign: 'justify',
        lineHeight: 1.5,
    },
    paragraph: {
        fontSize: 10,
        color: '#7e7e7f',
        marginBottom: 15,
        textAlign: 'justify',
    },
    widgetRow: {
        marginBottom: 15,
    },
    widget: {
        padding: 12,
        borderRadius: 5,
        backgroundColor: '#9590ef',
        opacity: 0.4,
    },
    widgetMainHeading: {
        fontSize: 14,
        color: '#1f2937',
        opacity: 1,
    },
    widgetSubItem: {
        fontSize: 10,
        color: '#343335',
        marginBottom: 4,
        opacity: 1,
    },
    widgetMainValue: {
        fontSize: 11,
        fontWeight: 'bold',
    },
    widgetIcon: {
        width: 25,
        height: 25,
        opacity: 1,
    },
    table: {
        marginTop: 10,
        border: '1pt solid #eae9fc',
        borderRadius: 5,
        opacity: 1,
    },
    tableHeader: {
        flexDirection: 'row',
        fontSize: 8,
        color: '#343335',
        backgroundColor: '#cac8f7',
        borderBottom: '1pt solid #eae9fc',
        opacity: 1,
    },
    tableHeaderCell: {
        padding: 3,
        paddingTop: 8,
        fontWeight: 'bold',
        borderRight: '1pt solid #eae9fc',
        textAlign: 'center',
        opacity: 1,
    },
    tableRow: {
        flexDirection: 'row',
        fontSize: 10,
        color: '#343335',
        borderBottom: '1pt solid #eae9fc',
        opacity: 1,
    },
    tableCell: {
        padding: 3,
        borderRight: '1pt solid #eae9fc',
        opacity: 1,
    },
    portCol: {
        width: '12%',
    },
    protocolCol: {
        width: '20%',
    },
    stateCol: {
        width: '12%',
    },
    serviceCol: {
        width: '19%',
    },
    versionCol: {
        width: '37%',
        borderRight: 'none'
    },
    pageNumber: {
        justifySelf: 'flex-end',
        alignSelf: 'flex-end',
        fontSize: 10,
        color: '#aaa',
    },
});

interface TargetEnumerationPageProps {
    companyLogoSrc: string;
    aiReportData: AIReportData;
}


const TargetEnumerationPage: React.FC<TargetEnumerationPageProps> = ({ companyLogoSrc, aiReportData }) => (
    <WaterMarkedPage companyLogoSrc={companyLogoSrc} sectionHeader='Web Application Penetration Testing' >
        <View style={styles.pageContent}>
            {/* Left Panel */}
            <View style={styles.leftPanel}>
                <View style={styles.leftTextContainer}>
                    <Text style={styles.leftTitle}>Target{'\n'}Enumeration</Text>
                </View>
                <Text style={styles.characterBig}>T</Text>
            </View>

            {/* Right Panel */}
            <View style={styles.rightPanel}>
                <View>
                    {/* === DOMAIN ENUMERATION === */}
                    <View style={[styles.widgetRow, styles.widget]}>
                        <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: 8 }}>
                            <Text style={styles.widgetMainHeading}>Domain Enumeration</Text>
                            <Image src={domainEnumerationUrl} style={styles.widgetIcon} />
                        </View>
                        <Text style={styles.widgetSubItem}>
                            Total FQDN Identified: <Text style={styles.widgetMainValue}>{aiReportData.amass?.executive_summary.unique_fqdns_count ?? 0}</Text>
                        </Text>
                        <Text style={styles.widgetSubItem}>
                            Unique IP Addresses: <Text style={styles.widgetMainValue}>{aiReportData.amass?.executive_summary.unique_ips_count ?? 0}</Text>
                        </Text>
                        <Text style={styles.widgetSubItem}>
                            Key ASNs Involved: <Text style={styles.widgetMainValue}>{aiReportData.amass?.executive_summary.unique_asns_count ?? 0}</Text>
                        </Text>
                    </View>

                    {/* === NETWORK OVERVIEW === */}
                    <View style={[styles.widgetRow, styles.widget]}>
                        <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: 8 }}>
                            <Text style={styles.widgetMainHeading}>Network Overview</Text>
                            <Image src={networkOverviewUrl} style={styles.widgetIcon} />
                        </View>
                        <Text style={styles.widgetSubItem}>
                            Host Status: <Text style={styles.widgetMainValue}>{aiReportData.nmap?.host_status ?? "N/A"}</Text>
                        </Text>
                        <Text style={styles.widgetSubItem}>
                            IP Address: <Text style={styles.widgetMainValue}>{aiReportData.nmap?.ip_address ?? "N/A"}</Text>
                        </Text>
                        <Text style={styles.widgetSubItem}>
                            Operating System: <Text style={styles.widgetMainValue}>{aiReportData.nmap?.operating_system.name ?? "N/A"}</Text>
                        </Text>
                    </View>

                    {/* === PORT SUMMARY === */}
                    <View style={[styles.widgetRow, styles.widget]}>
                        <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: 8 }}>
                            <Text style={styles.widgetMainHeading}>Port Summary</Text>
                            <Image src={portsSummaryUrl} style={styles.widgetIcon} />
                        </View>
                        <Text style={styles.widgetSubItem}>
                            Total Ports Scanned: <Text style={styles.widgetMainValue}>{aiReportData.nmap?.port_summary.total_ports_scanned ?? "N/A"}</Text>
                        </Text>
                        <Text style={styles.widgetSubItem}>
                            Open Ports: <Text style={styles.widgetMainValue}>{aiReportData.nmap?.port_summary.open_ports_count ?? "N/A"}</Text>
                        </Text >
                        <Text style={styles.widgetSubItem}>
                            Filtered Ports: <Text style={styles.widgetMainValue}>{aiReportData.nmap?.port_summary.filtered_ports_count ?? "N/A"}</Text>
                        </Text >

                        {/* Table Inside Widget */}
                        <View style={[styles.table, { marginTop: 10 }]}>
                            <View style={styles.tableHeader}>
                                <Text style={[styles.tableHeaderCell, styles.portCol]}>PORT</Text>
                                <Text style={[styles.tableHeaderCell, styles.protocolCol]}>PROTOCOL</Text>
                                <Text style={[styles.tableHeaderCell, styles.stateCol]}>STATE</Text>
                                <Text style={[styles.tableHeaderCell, styles.serviceCol]}>SERVICE</Text>
                                <Text style={[styles.tableHeaderCell, styles.versionCol]}>VERSION</Text>
                            </View>
                            {
                                aiReportData.nmap?.open_ports.map((row, index) => (
                                    // <View style={[styles.tableRow, index % 2 === 1 && { backgroundColor: '#f9fafb' }]} key={index}>

                                    <View style={styles.tableRow} key={index}>
                                        <Text style={[styles.tableCell, styles.portCol]}>{row.port}</Text>
                                        <Text style={[styles.tableCell, styles.protocolCol]}>{row.protocol}</Text>
                                        <Text style={[styles.tableCell, styles.stateCol]}>{row.state}</Text>
                                        <Text style={[styles.tableCell, styles.serviceCol]}>{row.service}</Text>
                                        <Text style={[styles.tableCell, styles.versionCol]}>{row.version}</Text>
                                    </View>
                                ))
                            }
                        </View>
                    </View >
                </View >

                <Text style={styles.pageNumber}>9</Text>
            </View >
        </View >
    </WaterMarkedPage >
);

export default TargetEnumerationPage;
