import React, { useEffect, useRef } from "react";
import GaugeChart from "react-gauge-chart";
import html2canvas from "html2canvas";

type SpeedometerProps = {
    effectivenessLevel: 'Effective' | 'Adequate' | 'Partial' | 'Exposed';
    onImageReady?: (dataUrl: string) => void;
};

const levelToPercent = {
    Effective: 0.125,
    Adequate: 0.375,
    Partial: 0.625,
    Exposed: 0.875,
};

const levelColors: Record<string, string> = {
    Effective: "#54bb5f",
    Adequate: "#ffd85f",
    Partial: "#faa439",
    Exposed: "#e31d1a",
};

const SpeedometerChart: React.FC<SpeedometerProps> = ({ effectivenessLevel, onImageReady }) => {
    const ref = useRef<HTMLDivElement>(null);

    useEffect(() => {
        if (ref.current && onImageReady) {
            html2canvas(ref.current).then(canvas => {
                const imgData = canvas.toDataURL("image/png");
                onImageReady(imgData);
            });
        }
    }, [effectivenessLevel]);

    return (
        <div
            ref={ref}
            className="w-full max-w-[500px] bg-white p-4"
        >
            {/* <div className="flex justify-end">
                <div className="flex flex-col justify-center items-start flex-wrap mt-5 px-2">
                    {Object.entries(levelColors).map(([label, color]) => (
                        <div key={label} className="flex items-start gap-1.5">
                            <div
                                className="w-[14px] h-[14px] rounded-sm border border-gray-300"
                                style={{ backgroundColor: color }}
                            />
                            <span className="text-xs text-gray-800">{label}</span>
                        </div>
                    ))}
                </div>
            </div> */}

            <GaugeChart
                nrOfLevels={4}
                percent={levelToPercent[effectivenessLevel]}
                colors={Object.values(levelColors)}
                arcWidth={0.3}
                textColor="#000"
                needleColor="#000"
                needleBaseColor="#000"
                formatTextValue={() => effectivenessLevel}
            />
        </div>
    );
};

export default SpeedometerChart;
