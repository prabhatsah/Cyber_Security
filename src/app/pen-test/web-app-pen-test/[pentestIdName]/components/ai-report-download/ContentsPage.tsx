import React from 'react';
import {
    Page,
    Text,
    View,
    StyleSheet,
    Image,
} from '@react-pdf/renderer';

// âœ… Replace with actual path
import logo from '../../../public/keross-logo-large.png';

const styles = StyleSheet.create({
    page: {
        padding: 50,
        fontSize: 11,
        fontFamily: 'Helvetica',
        position: 'relative',
        color: '#111827',
    },
    backgroundImage: {
        position: 'absolute',
        top: '50%',
        width: 500,
        opacity: 0.08, // Faded but retain colors
    },
    title: {
        fontSize: 32,
        marginBottom: 30,
        fontWeight: 'bold',
        textAlign: 'left',
        color: '#111827',
        textTransform: 'uppercase',
    },
    columnWrapper: {
        flexDirection: 'row',
        justifyContent: 'space-between',
    },
    column: {
        width: '30%',
    },
    divider: {
        width: 1,
        backgroundColor: '#e5e7eb',
        marginHorizontal: 10,
    },
    itemBlock: {
        marginBottom: 10,
    },
    itemRow: {
        flexDirection: 'row',
        justifyContent: 'space-between',
    },
    subItemRow: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        paddingLeft: 10,
        color: '#4b5563',
    },
});

interface TOCItem {
    title: string;
    page: number;
    subItems?: TOCItem[];
}

interface ContentsPageProps {
    contents: TOCItem[][];
    companyLogo: string;
}

const ContentsPage: React.FC<ContentsPageProps> = ({ contents, companyLogo }) => (
    <Page style={styles.page}>
        <Image style={styles.backgroundImage} src={companyLogo} />
        <Text style={styles.title}>Contents</Text>
        <View style={styles.columnWrapper}>
            {contents.map((column, index) => (
                <React.Fragment key={index}>
                    {index > 0 && <View style={styles.divider} />}
                    <View style={styles.column}>
                        {column.map((item, i) => (
                            <View key={i} style={styles.itemBlock}>
                                <View style={styles.itemRow}>
                                    <Text>{item.title}</Text>
                                    <Text>{item.page}</Text>
                                </View>
                                {item.subItems?.map((subItem, subIndex) => (
                                    <View key={subIndex} style={styles.subItemRow}>
                                        <Text>{subItem.title}</Text>
                                        <Text>{subItem.page}</Text>
                                    </View>
                                ))}
                            </View>
                        ))}
                    </View>
                </React.Fragment>
            ))}
        </View>
    </Page>
);

export default ContentsPage;
