import React from 'react';
import {
    Page,
    Text,
    View,
    StyleSheet,
    Image,
} from '@react-pdf/renderer';

const styles = StyleSheet.create({
    page: {
        padding: 50,
        fontSize: 11,
        fontFamily: 'Helvetica',
        backgroundColor: '#fff',
        position: 'relative',
        color: '#343335',
    },
    backgroundImage: {
        position: 'absolute',
        top: '20%',
        width: 500,
        opacity: 0.08,
    },
    title: {
        fontSize: 80,
        marginBottom: 40,
        fontWeight: 'medium',
        textAlign: 'left',
        color: '#343335',
    },
    section: {
        marginBottom: 16,
    },
    itemRow: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        marginTop: 8,
    },
    subItemRow: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        marginTop: 8,
    },
    level1: {
        paddingLeft: 12,
        color: '#545355',
    },
    level2: {
        paddingLeft: 24,
        color: '#7e7e7f',
    },
    level3: {
        paddingLeft: 36,
        color: '#a0a0a1',
    },
});

interface TOCItem {
    title: string;
    page: number;
    subItems?: TOCItem[];
}

export interface ContentsPageProps {
    contents: TOCItem[];
    companyLogoSrc: string;
}

// Recursive renderer
const renderTOCItems = (items: TOCItem[], level = 0) => {
    return items.map((item, index) => {
        const indentStyle =
            level === 0
                ? styles.itemRow
                : [styles.subItemRow, styles[`level${level}` as keyof typeof styles]];

        return (
            <View key={`${level}-${index}`}>
                <View style={indentStyle}>
                    <Text>{item.title}</Text>
                    <Text>{item.page}</Text>
                </View>
                {item.subItems && renderTOCItems(item.subItems, level + 1)}
            </View>
        );
    });
};

const ContentsPage: React.FC<ContentsPageProps> = ({ contents, companyLogoSrc }) => (
    <Page style={styles.page}>
        {/* Background watermark */}
        <Image style={styles.backgroundImage} src={companyLogoSrc} />

        {/* Heading */}
        <Text style={styles.title}>Contents</Text>

        {/* Render TOC items */}
        <View style={styles.section}>
            {renderTOCItems(contents)}
        </View>
    </Page>
);

export default ContentsPage;
