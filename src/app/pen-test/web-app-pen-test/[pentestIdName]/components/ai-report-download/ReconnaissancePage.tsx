import React from 'react';
import {
    Page,
    Text,
    View,
    StyleSheet,
    Image,
} from '@react-pdf/renderer';


const styles = StyleSheet.create({
    page: {
        position: 'relative',
        padding: 40,
        fontSize: 10,
        fontFamily: 'Helvetica',
        color: '#1f2937',
    },
    backgroundImage: {
        position: 'absolute',
        top: '20%',
        width: 500,
        opacity: 0.08,
        zIndex: 1
    },
    heading: {
        fontSize: 28,
        marginBottom: 20,
        color: '#414042',
    },
    widgetRow: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        marginBottom: 20,
    },
    widget: {
        width: '32%',
        backgroundColor: '#f3f4f6',
        padding: 12,
        borderRadius: 6,
        textAlign: 'center',
    },
    widgetTitle: {
        fontSize: 10,
        marginBottom: 6,
        color: '#6b7280',
    },
    widgetValue: {
        fontSize: 16,
        fontWeight: 'bold',
        color: '#111827',
    },
    table: {
        marginTop: 10,
        border: '1pt solid #ccc',
    },
    tableHeader: {
        flexDirection: 'row',
        backgroundColor: '#f9fafb',
        borderBottom: '1pt solid #ccc',
    },
    tableHeaderCell: {
        flex: 1,
        fontWeight: 'bold',
        padding: 6,
    },
    tableRow: {
        flexDirection: 'row',
        borderBottom: '0.5pt solid #e5e7eb',
    },
    tableCell: {
        flex: 1,
        padding: 6,
    },
});

interface ReconnaissancePageProps {
    companyLogoSrc: string;
}


const ReconnaissancePage: React.FC<ReconnaissancePageProps> = ({ companyLogoSrc }) => (
    <Page size="A4" style={styles.page}>
        <Image src={companyLogoSrc} style={styles.backgroundImage} />

        <Text style={styles.heading}>Target Info</Text>

        {/* Widget Row 1 */}
        <View style={styles.widgetRow}>
            <View style={styles.widget}>
                <Text style={styles.widgetTitle}>Total FQDN Identified</Text>
                <Text style={styles.widgetValue}>41</Text>
            </View>
            <View style={styles.widget}>
                <Text style={styles.widgetTitle}>Unique IP Addresses</Text>
                <Text style={styles.widgetValue}>34</Text>
            </View>
            <View style={styles.widget}>
                <Text style={styles.widgetTitle}>Key ASNs Involved</Text>
                <Text style={styles.widgetValue}>5</Text>
            </View>
        </View>

        {/* Widget Row 2 */}
        <View style={styles.widgetRow}>
            <View style={styles.widget}>
                <Text style={styles.widgetTitle}>Host Status</Text>
                <Text style={[styles.widgetValue, { color: 'green' }]}>Online</Text>
            </View>
            <View style={styles.widget}>
                <Text style={styles.widgetTitle}>IP Address</Text>
                <Text style={styles.widgetValue}>109.228.52.113</Text>
            </View>
            <View style={styles.widget}>
                <Text style={styles.widgetTitle}>Operating System</Text>
                <Text style={styles.widgetValue}>Linux</Text>
            </View>
        </View>

        <View style={styles.widgetRow}>
            <View style={styles.widget}>
                <Text style={styles.widgetTitle}>Total Ports Scanned</Text>
                <Text style={styles.widgetValue}>1000</Text>
            </View>
            <View style={styles.widget}>
                <Text style={styles.widgetTitle}>Open Ports</Text>
                <Text style={[styles.widgetValue, { color: 'green' }]}>3</Text>
            </View>
            <View style={styles.widget}>
                <Text style={styles.widgetTitle}>Filtered Ports</Text>
                <Text style={[styles.widgetValue, { color: '#eab308' }]}>997</Text>
            </View>
        </View>

        {/* Detailed Open Ports Table */}
        <View style={styles.table}>
            <View style={styles.tableHeader}>
                <Text style={styles.tableHeaderCell}>PORT</Text>
                <Text style={styles.tableHeaderCell}>PROTOCOL</Text>
                <Text style={styles.tableHeaderCell}>STATE</Text>
                <Text style={styles.tableHeaderCell}>SERVICE</Text>
                <Text style={styles.tableHeaderCell}>VERSION</Text>
            </View>
            {[
                { port: '22', protocol: 'tcp', state: 'open', service: 'ssh', version: 'OpenSSH 9.6p1 Ubuntu 3ubuntu13.11' },
                { port: '80', protocol: 'tcp', state: 'open', service: 'http', version: 'nginx 1.24.0 (Ubuntu)' },
                { port: '443', protocol: 'tcp', state: 'open', service: 'ssl/http', version: 'nginx 1.24.0 (Ubuntu)' },
            ].map((row, index) => (
                <View style={styles.tableRow} key={index}>
                    <Text style={styles.tableCell}>{row.port}</Text>
                    <Text style={styles.tableCell}>{row.protocol}</Text>
                    <Text style={styles.tableCell}>{row.state}</Text>
                    <Text style={styles.tableCell}>{row.service}</Text>
                    <Text style={styles.tableCell}>{row.version}</Text>
                </View>
            ))}
        </View>
    </Page>
);

export default ReconnaissancePage;
