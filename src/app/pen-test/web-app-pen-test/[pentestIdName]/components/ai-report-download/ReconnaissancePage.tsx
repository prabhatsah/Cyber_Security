import React from 'react';
import {
    Page,
    Text,
    View,
    StyleSheet,
    Image,
} from '@react-pdf/renderer';
import { AIReportData } from '../../../components/type';

const styles = StyleSheet.create({
    page: {
        position: 'relative',
        padding: 40,
        fontSize: 10,
        fontFamily: 'Helvetica',
        color: '#1f2937',
    },
    backgroundImage: {
        position: 'absolute',
        top: '20%',
        width: 500,
        opacity: 0.08,
        zIndex: 1
    },
    heading: {
        fontSize: 28,
        marginBottom: 20,
        color: '#414042',
    },
    widgetRow: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        marginBottom: 20,
    },
    widget: {
        width: '32%',
        backgroundColor: '#f3f4f6',
        padding: 12,
        borderRadius: 6,
        textAlign: 'center',
    },
    widgetTitle: {
        fontSize: 10,
        marginBottom: 6,
        color: '#6b7280',
    },
    widgetValue: {
        fontSize: 16,
        fontWeight: 'bold',
        color: '#111827',
    },
    table: {
        marginTop: 10,
        border: '1pt solid #ccc',
    },
    tableHeader: {
        flexDirection: 'row',
        backgroundColor: '#f9fafb',
        borderBottom: '1pt solid #ccc',
    },
    tableHeaderCell: {
        padding: 6,
        fontWeight: 'bold',
        borderRight: '1pt solid #ccc',
    },
    tableRow: {
        flexDirection: 'row',
        borderBottom: '0.5pt solid #e5e7eb',
    },
    tableCell: {
        padding: 6,
        borderRight: '1pt solid #e5e7eb',
    },
    portCol: {
        width: '8%',
    },
    protocolCol: {
        width: '15%',
    },
    stateCol: {
        width: '12%',
    },
    serviceCol: {
        width: '20%',
    },
    versionCol: {
        width: '45%',
        borderRight: 'none'
    },
});

interface ReconnaissancePageProps {
    companyLogoSrc: string;
    aiReportData: AIReportData;
}

const ReconnaissancePage: React.FC<ReconnaissancePageProps> = ({ companyLogoSrc, aiReportData }) => (
    <Page size="A4" style={styles.page}>
        <Image src={companyLogoSrc} style={styles.backgroundImage} />

        <Text style={styles.heading}>Target Info</Text>

        {/* Widget Row 1 */}
        <View style={styles.widgetRow}>
            <View style={styles.widget}>
                <Text style={styles.widgetTitle}>Total FQDN Identified</Text>
                <Text style={styles.widgetValue}>{aiReportData.amass?.executive_summary.unique_fqdns_count ?? 0}</Text>
            </View>
            <View style={styles.widget}>
                <Text style={styles.widgetTitle}>Unique IP Addresses</Text>
                <Text style={styles.widgetValue}>{aiReportData.amass?.executive_summary.unique_ips_count ?? 0}</Text>
            </View>
            <View style={styles.widget}>
                <Text style={styles.widgetTitle}>Key ASNs Involved</Text>
                <Text style={styles.widgetValue}>{aiReportData.amass?.executive_summary.unique_asns_count ?? 0}</Text>
            </View>
        </View>

        {/* Widget Row 2 */}
        <View style={styles.widgetRow}>
            <View style={styles.widget}>
                <Text style={styles.widgetTitle}>Host Status</Text>
                <Text style={styles.widgetValue}>{aiReportData.nmap?.host_status ?? "N/A"}</Text>
            </View>
            <View style={styles.widget}>
                <Text style={styles.widgetTitle}>IP Address</Text>
                <Text style={styles.widgetValue}>{aiReportData.nmap?.ip_address ?? "N/A"}</Text>
            </View>
            <View style={styles.widget}>
                <Text style={styles.widgetTitle}>Operating System</Text>
                <Text style={styles.widgetValue}>{aiReportData.nmap?.operating_system.name ?? "N/A"}</Text>
            </View>
        </View>

        <View style={styles.widgetRow}>
            <View style={styles.widget}>
                <Text style={styles.widgetTitle}>Total Ports Scanned</Text>
                <Text style={styles.widgetValue}>{aiReportData.nmap?.port_summary.total_ports_scanned ?? "N/A"}</Text>
            </View>
            <View style={styles.widget}>
                <Text style={styles.widgetTitle}>Open Ports</Text>
                <Text style={styles.widgetValue}>{aiReportData.nmap?.port_summary.open_ports_count ?? "N/A"}</Text>
            </View>
            <View style={styles.widget}>
                <Text style={styles.widgetTitle}>Filtered Ports</Text>
                <Text style={styles.widgetValue}>{aiReportData.nmap?.port_summary.filtered_ports_count ?? "N/A"}</Text>
            </View>
        </View>

        {/* Detailed Open Ports Table */}
        <View style={styles.table}>
            <View style={styles.tableHeader}>
                <Text style={[styles.tableHeaderCell, styles.portCol]}>PORT</Text>
                <Text style={[styles.tableHeaderCell, styles.protocolCol]}>PROTOCOL</Text>
                <Text style={[styles.tableHeaderCell, styles.stateCol]}>STATE</Text>
                <Text style={[styles.tableHeaderCell, styles.serviceCol]}>SERVICE</Text>
                <Text style={[styles.tableHeaderCell, styles.versionCol]}>VERSION</Text>
            </View>
            {aiReportData.nmap?.open_ports.map((row, index) => (
                <View style={styles.tableRow} key={index}>
                    <Text style={[styles.tableCell, styles.portCol]}>{row.port}</Text>
                    <Text style={[styles.tableCell, styles.protocolCol]}>{row.protocol}</Text>
                    <Text style={[styles.tableCell, styles.stateCol]}>{row.state}</Text>
                    <Text style={[styles.tableCell, styles.serviceCol]}>{row.service}</Text>
                    <Text style={[styles.tableCell, styles.versionCol]}>{row.version}</Text>
                </View>
            ))}
        </View>
    </Page>
);

export default ReconnaissancePage;
