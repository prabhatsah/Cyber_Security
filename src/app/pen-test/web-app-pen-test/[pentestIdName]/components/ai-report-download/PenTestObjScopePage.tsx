import React from 'react';
import {
  Text,
  View,
  StyleSheet,
  Link,
} from '@react-pdf/renderer';
import WaterMarkedPage from './WaterMarkedPage';

const styles = StyleSheet.create({
  mainSection: {
    flexDirection: 'column',
    justifyContent: 'space-between',
    height: '100%',
  },
  section: {
    marginBottom: 15,
  },
  sectionTitle: {
    fontSize: 16,
    fontWeight: 'light',
    color: '#414042',
    marginBottom: 10,
  },
  paragraph: {
    fontSize: 10,
    color: '#7e7e7f',
    marginBottom: 4,
    textAlign: 'justify',
  },
  appendixRef: {
    fontWeight: 'bold',
  },
  bulletContainer: {
    flexDirection: 'row',
    gap: 10,
  },
  bulletPoint: {
    marginLeft: 10,
    color: '#4f46e5',
  },
  linkText: {
    textDecoration: 'none',
    fontSize: 10,
    color: '#7e7e7f',
    textAlign: 'justify',
  },
  pageNumber: {
    justifySelf: 'flex-end',
    alignSelf: 'flex-end',
    fontSize: 10,
    color: '#aaa',
  },
});

interface PenTestObjScopePageProps {
  companyLogoSrc: string;
}

const PenTestObjScopePage: React.FC<PenTestObjScopePageProps> = ({ companyLogoSrc }) => (
  <WaterMarkedPage companyLogoSrc={companyLogoSrc} sectionHeader='Web Application Penetration Testing' backgroundColor='#fff'>

    <View style={styles.mainSection}>
      <View>
        {/* Context of the Mandate */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>Objective</Text>
          <Text style={styles.paragraph}>
            The objective of the web application penetration test is to identify weaknesses and vulnerabilities in the web application that would allow a malicious user the
            ability to attack the system and obtain access beyond what is authorized and normally available by design.
          </Text>
          <Text style={styles.paragraph}>
            The Keross testing team relies on multiple frameworks to perform intrusion testing on web applications. Effectively, the OWASP Top 10 Project and the OWASP Testing
            Guide v.4 are the two principal references on this matter. The OWASP Top 10 Project is aimed to describe 10 categories of common vulnerabilities that are present in
            modern web applications. Based on the 2021 version, those categories are:
          </Text>

          <View style={styles.bulletContainer}>
            <Text style={styles.bulletPoint}>•</Text>
            <Text style={styles.paragraph}>Broken Access Control</Text>
          </View>
          <View style={styles.bulletContainer}>
            <Text style={styles.bulletPoint}>•</Text>
            <Text style={styles.paragraph}>Cryptographic Failures</Text>
          </View>
          <View style={styles.bulletContainer}>
            <Text style={styles.bulletPoint}>•</Text>
            <Text style={styles.paragraph}>Injection</Text>
          </View>
          <View style={styles.bulletContainer}>
            <Text style={styles.bulletPoint}>•</Text>
            <Text style={styles.paragraph}>Insecure Design</Text>
          </View>
          <View style={styles.bulletContainer}>
            <Text style={styles.bulletPoint}>•</Text>
            <Text style={styles.paragraph}>Security Misconfiguration</Text>
          </View>
          <View style={styles.bulletContainer}>
            <Text style={styles.bulletPoint}>•</Text>
            <Text style={styles.paragraph}>Vulnerable and Outdated Components</Text>
          </View>
          <View style={styles.bulletContainer}>
            <Text style={styles.bulletPoint}>•</Text>
            <Text style={styles.paragraph}>Identification and Authentication Failures</Text>
          </View>
          <View style={styles.bulletContainer}>
            <Text style={styles.bulletPoint}>•</Text>
            <Text style={styles.paragraph}>Software and Data Integrity Failures</Text>
          </View>
          <View style={styles.bulletContainer}>
            <Text style={styles.bulletPoint}>•</Text>
            <Text style={styles.paragraph}>Security Logging and Monitoring Failures</Text>
          </View>
          <View style={styles.bulletContainer}>
            <Text style={styles.bulletPoint}>•</Text>
            <Text style={styles.paragraph}>Server-Side Request Forgery (SSRF)</Text>
          </View>
        </View>

        {/* Our Penetration Testing Approach */}
        <View>
          <Text style={styles.sectionTitle}>Scope</Text>
          <Text style={styles.paragraph}>
            For this mandate, S2 Cyber Security provided the following URLs in scope for testing:
          </Text>
          <View style={styles.bulletContainer}>
            <Text style={styles.bulletPoint}>•</Text>
            <Text style={styles.paragraph}><Link src="https://www.s2cybersecurityservices.com/" style={styles.linkText}>https://s2cybersecurityservices.com/</Link></Text>
          </View>

          <Text style={styles.paragraph}>
            Both authenticated and unauthenticated attacks were simulated during the tests (i.e. with and without a user account on the system). To this end, a user account was provided by the Client to the Keross team:
          </Text>
          <View style={styles.bulletContainer}>
            <Text style={styles.bulletPoint}>•</Text>
            <Text style={styles.paragraph}>admin@s2</Text>
          </View>
          <View style={styles.bulletContainer}>
            <Text style={styles.bulletPoint}>•</Text>
            <Text style={styles.paragraph}>nonadmin@s2</Text>
          </View>

          <Text style={styles.paragraph}>
            The testing activities were performed following a “black box” approach, meaning that the testers started with no knowledge or information about the network. Keross’s standard methodology was used for this
            phase (see <Text style={styles.appendixRef}>Appendix 1 - Testing Methodology</Text> for more details).
          </Text>
          <Text style={styles.paragraph}>
            No social engineering or phishing attacks were allowed. Physical security (e.g. breaching the corporate office) was also not allowed for this phase.
          </Text>
          <Text style={styles.paragraph}>
            The testing was conducted between Monday, June 09, 2025 and Monday, June 16, 2025. The findings and recommendations outlined below represent the state of the environment at that time.
          </Text>
        </View>
      </View>

      <Text style={styles.pageNumber}>8</Text>
    </View>
  </WaterMarkedPage>
);

export default PenTestObjScopePage;
