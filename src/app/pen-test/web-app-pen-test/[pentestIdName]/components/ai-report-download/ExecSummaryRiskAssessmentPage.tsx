import React from 'react';
import { View, Text, StyleSheet, Image } from '@react-pdf/renderer';
import WaterMarkedPage from './WaterMarkedPage';
import { AIReportOverallRiskAssessment } from '../../../components/type';

const speedometerChartUrl = '/cyber-security/assets/images/speedometer_with_legend.png';

export const styles = StyleSheet.create({
    pageContent: {
        flexDirection: 'row',
        fontSize: 11,
        fontFamily: 'Helvetica',
        color: '#545355',
        height: '100%',
    },
    leftPanel: {
        width: '30%',
        backgroundColor: '#4f46e5',
        justifyContent: 'space-between',
        zIndex: -1111111,
    },
    leftTextContainer: {
        marginTop: 40,
        padding: 10,
    },
    numberBig: {
        position: 'absolute',
        top: 250,
        bottom: 0,
        left: -55,
        fontSize: 540,
        color: '#fff',
        opacity: 0.2,
    },
    leftTitle: {
        fontSize: 14,
        color: '#fff',
        marginBottom: 15,
    },
    leftBody: {
        fontSize: 8,
        lineHeight: 1.4,
        color: '#fff',
        textAlign: 'justify',
    },
    rightPanel: {
        flexDirection: 'column',
        justifyContent: 'space-between',
        paddingLeft: 20,
        width: '70%',
        position: 'relative',
    },
    chartImage: {
        width: 320,
        height: 180,
        alignSelf: 'flex-end',
        marginBottom: 20,
    },
    legendBox: {
        width: 8,
        height: 8,
        marginVertical: 0
    },
    legendLabel: {
        fontSize: 8,
        marginVertical: 0,
    },
    paragraph: {
        fontSize: 10,
        marginBottom: 8,
        textAlign: 'justify',
    },
    boldText: {
        fontWeight: 'bold',
    },
    pageNumber: {
        justifySelf: 'flex-end',
        alignSelf: 'flex-end',
        fontSize: 10,
        color: '#aaa',
    },
});

const levelColors: Record<string, string> = {
    Effective: "#54bb5f",
    Adequate: "#ffd85f",
    Partial: "#faa439",
    Exposed: "#e31d1a",
};

interface ExecSummaryRiskAssessmentPageProps {
    companyLogoSrc: string;
    riskAssessmentObj: AIReportOverallRiskAssessment,
    riskAssessmentChartImg: string;
}

const ExecSummaryRiskAssessmentPage: React.FC<ExecSummaryRiskAssessmentPageProps> = ({ companyLogoSrc, riskAssessmentObj, riskAssessmentChartImg }) => (
    <WaterMarkedPage companyLogoSrc={companyLogoSrc} sectionHeader='Executive Summary' >
        <View style={styles.pageContent}>
            {/* Left Panel */}
            <View style={styles.leftPanel}>
                <View style={styles.leftTextContainer}>
                    <Text style={styles.leftTitle}>Web Application Penetration Testing</Text>
                    <Text style={styles.leftBody}>
                        The objective of this test is to identify weaknesses and vulnerabilities in the application that would allow a malicious user to attack the system and obtain access beyond what is authorized and normally available by design. The approach has used and leveraged the guidelines of the OWASP v4 methodology.
                    </Text>
                </View>
                <Text style={styles.numberBig}>1</Text>
            </View>

            {/* Right Panel */}
            <View style={styles.rightPanel}>
                <View>
                    <View style={{ flexDirection: 'row', justifyContent: 'flex-end', marginTop: 30, marginBottom: 0 }}>
                        <View style={{ flexDirection: 'column', justifyContent: 'center', alignItems: 'flex-start', marginBottom: 10 }}>
                            {Object.entries(levelColors).map(([label, color], index) => (
                                <View key={index} style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'flex-start', gap: 1.5, marginVertical: 0 }}>
                                    <View style={[styles.legendBox, { backgroundColor: color }]} />
                                    <Text style={styles.legendLabel}>{label}</Text>
                                </View>
                            ))}
                        </View>
                    </View>
                    <Image src={riskAssessmentChartImg} style={styles.chartImage} />

                    <Text style={styles.paragraph}>
                        After the testing, and based on its test appreciation levels methodology (see{' '}
                        <Text style={styles.boldText}>Appendix 4 - Test Appreciation Levels</Text>
                        ), the Keross testing team can qualify the security posture of the tested environment as the following:
                    </Text>

                    <Text style={styles.paragraph}>
                        <Text style={styles.boldText}>{riskAssessmentObj.level}</Text> - {riskAssessmentObj.justification}
                    </Text>
                </View>

                <Text style={styles.pageNumber}>3</Text>
            </View>
        </View>
    </WaterMarkedPage>
);

export default ExecSummaryRiskAssessmentPage;
