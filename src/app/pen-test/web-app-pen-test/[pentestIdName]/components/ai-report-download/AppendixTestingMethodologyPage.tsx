import React from 'react';
import {
    Text,
    View,
    Image,
    StyleSheet,
} from '@react-pdf/renderer';
import WaterMarkedPage from './WaterMarkedPage';

const methodologyDiagramUrl = '/cyber-security/assets/images/appendix_testing_methodology.png';

const styles = StyleSheet.create({
    pageContent: {
        flexDirection: 'column',
        justifyContent: 'space-between',
        height: '100%',
    },
    heading: {
        fontSize: 30,
        marginBottom: 15,
    },
    activityTitle: {
        fontSize: 14,
        color: '#343335',
        marginBottom: 5,
    },
    paragraph: {
        fontSize: 10,
        color: '#545355',
        marginBottom: 15,
        textAlign: 'justify',
    },
    image: {
        marginTop: 15,
        width: '100%',
    },
    pageNumber: {
        justifySelf: 'flex-end',
        alignSelf: 'flex-end',
        fontSize: 10,
        color: '#aaa',
    },
});

interface AppendixTestingMethodologyPageProps {
    companyLogoSrc: string;
    pageNumber: number
}

const AppendixTestingMethodologyPage: React.FC<AppendixTestingMethodologyPageProps> = ({ companyLogoSrc, pageNumber }) => (
    <WaterMarkedPage companyLogoSrc={companyLogoSrc} sectionHeader='Report Appendix' backgroundColor='#e3e4df'>
        <View style={styles.pageContent}>
            <View>
                <View style={{ flexDirection: 'row', marginBottom: 15 }}>
                    <Text style={[styles.heading, { fontWeight: 700, marginRight: 4 }]}>Appendix A:</Text>
                    <Text style={styles.heading}>Testing Methodology</Text>
                </View>

                <Text style={styles.paragraph}>
                    To evaluate the effectiveness of the security controls in place and to identify potential weaknesses in the web application, we followed a structured penetration testing methodology. This methodology is divided into five (5) distinct phases:
                </Text>

                <Text style={styles.activityTitle}>Activity 1: Discovery</Text>
                <Text style={styles.paragraph}>
                    This phase involves gathering preliminary information about the target web application, including its purpose, technologies, and scope. Authorization and engagement rules are confirmed with the client. This sets the foundation for the testing process.
                </Text>

                <Text style={styles.activityTitle}>Activity 2: Enumeration</Text>
                <Text style={styles.paragraph}>
                    We perform passive and active reconnaissance to identify subdomains, open ports, technologies, and other system details. The goal is to build a technical profile of the target, which guides vulnerability identification.
                </Text>

                <Text style={styles.activityTitle}>Activity 3: Exploitation</Text>
                <Text style={styles.paragraph}>
                    Based on the previous findings, we attempt to exploit identified weaknesses using both automated tools and manual techniques. This phase aligns with the OWASP Top 10 and aims to validate real-world risks to the application.
                </Text>

                <Text style={styles.activityTitle}>Activity 4: Post Exploitation</Text>
                <Text style={styles.paragraph}>
                    We assess the impact of successful exploitation, gather evidence (e.g., access to sensitive data), and check for privilege escalation opportunities. We also verify potential false positives at this stage.
                </Text>

                <Text style={styles.activityTitle}>Activity 5: Documentation</Text>
                <Text style={styles.paragraph}>
                    Finally, we compile a detailed report outlining all findings, risk ratings, affected components, and prioritized recommendations. This provides the client with actionable insights to improve their security posture.
                </Text>

                <Image src={methodologyDiagramUrl} style={styles.image} />
            </View>

            <Text style={styles.pageNumber}>{pageNumber}</Text>
        </View>
    </WaterMarkedPage >
);

export default AppendixTestingMethodologyPage;
