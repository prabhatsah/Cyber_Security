'use client';

import React from 'react';
import { Card, Tab, TabGroup, TabList, TabPanel, TabPanels } from '@tremor/react';
import BasicDetailsWidget from '../planning/BasicDetailsWidget';
import NoSavedPentestTemplate from '../NoSavedPentestTemplate';
import { ScanSearch, TextSearch } from 'lucide-react';
import ActiveReconnaissanceWidget from './active-reconnaissance/ActiveReconnaissanceWidget';

export default function ReconnaissanceWidget({ pentestIdName, pentestSubPartData }: { pentestIdName: string; pentestSubPartData: any }) {
    const [pentestId, pentestName] = pentestIdName.split("_");

    const tabData = [
        {
            pentestState: 'Active Reconnaissance',
            // componentData: pentestData.basicDetails,
            ComponentName: BasicDetailsWidget,
            Icon: ScanSearch,
        },
        {
            pentestState: 'Passive Reconnaissance',
            // componentData: pentestData.reconnaissance,
            ComponentName: BasicDetailsWidget,
            Icon: TextSearch,
        },
    ];

    return (
        <>
            <Card className="bg-tremor-background-muted p-0 dark:bg-dark-tremor-background-muted">
                <TabGroup className='flex-col'>
                    <TabList className="bg-tremor-background-muted px-6 pt-2 dark:bg-dark-tremor-background-muted mb-2">
                        {tabData.map((eachTab, index) => {
                            return (
                                <Tab
                                    key={eachTab.pentestState}
                                    className="pb-2.5 font-medium hover:border-gray-300 flex items-center space-x-2"
                                >
                                    <div className="flex items-center justify-between gap-4 font-medium text-tremor-content-strong dark:text-dark-tremor-content-strong">
                                        <div className='flex items-center gap-2'>
                                            <eachTab.Icon className="-ml-1 size-4" aria-hidden="true" />
                                            {eachTab.pentestState}
                                        </div>
                                    </div>
                                </Tab>
                            )
                        })}
                    </TabList>

                    <TabPanels>
                        <TabPanel
                            key={`${pentestIdName}_active_reconnaissance`}
                            className="p-4"
                        >
                            {<ActiveReconnaissanceWidget pentestIdName={pentestIdName} />}
                        </TabPanel>
                        <TabPanel
                            key={`${pentestIdName}_passive_reconnaissance`}
                            className="p-4"
                        >
                            {<NoSavedPentestTemplate pentestIdName={pentestIdName} />}
                        </TabPanel>
                    </TabPanels>
                </TabGroup>
            </Card>
        </>
    );
}
