"use client";

import { useEffect } from "react";
import { usePentestContext } from "../../components/PentestContext";
import GlobalLoader from "@/components/GlobalLoader";
import WorkInProgressTemplate from "../../components/WorkInProgressTemplate";
import ExploitationAccordion from "./ExploitationAccordion";
import { ZapData } from "../../../components/type";

export default function ExploitationMainTemplate({ pentestIdName }: { pentestIdName: string; }) {
    const [pentestId, pentestNameInUrl] = pentestIdName.split("_");
    const pentestName = pentestNameInUrl.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');
    const { pentestData, loading, error, setPentestId } = usePentestContext();

    useEffect(() => {
        if (typeof pentestId === 'string') {
            setPentestId(pentestId);
        }
    }, [pentestId]);

    if (error) return <div>{error}</div>;
    if (!pentestData && !loading) return <div></div>;
    if (loading || !pentestData) return <GlobalLoader />;

    const zapData: ZapData | undefined = pentestData?.scanData.zap;

    return (zapData ? <ExploitationAccordion zapData={zapData} /> : <WorkInProgressTemplate />);
}