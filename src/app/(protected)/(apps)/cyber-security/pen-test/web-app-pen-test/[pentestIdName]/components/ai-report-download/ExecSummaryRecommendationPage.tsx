import React from 'react';
import { View, Text, StyleSheet } from '@react-pdf/renderer';
import WaterMarkedPage from './WaterMarkedPage';
import { ZapAlert } from '../../../components/type';

const styles = StyleSheet.create({
    pageContent: {
        flexDirection: 'row',
        fontSize: 11,
        fontFamily: 'Helvetica',
        color: '#545355',
        height: '100%',
    },
    leftPanel: {
        width: '30%',
        backgroundColor: '#4f46e5',
        justifyContent: 'space-between',
        zIndex: -1111111,
    },
    leftTextContainer: {
        marginTop: 40,
        padding: 10,
    },
    numberBig: {
        position: 'absolute',
        top: 250,
        bottom: 0,
        left: -200,
        fontSize: 540,
        color: '#fff',
        opacity: 0.2,
    },
    leftTitle: {
        fontSize: 14,
        color: '#fff',
        marginBottom: 15,
        lineHeight: 1.5,
    },
    rightPanel: {
        flexDirection: 'column',
        justifyContent: 'space-between',
        paddingTop: 10,
        paddingLeft: 20,
        width: '70%',
        position: 'relative',
    },
    paragraphTitle: {
        fontSize: 10,
        fontWeight: 'bold',
        textAlign: 'justify',
        lineHeight: 1.5,
    },
    paragraph: {
        fontSize: 10,
        marginBottom: 10,
        textAlign: 'justify',
    },
    pageNumber: {
        justifySelf: 'flex-end',
        alignSelf: 'flex-end',
        fontSize: 10,
        color: '#aaa',
    },
});

interface ExecSummaryRecommendationPageProps {
    companyLogoSrc: string;
    zapAlerts: ZapAlert[];
}

function removePTags(htmlString: string) {
    return htmlString.replace(/<\/?p>/g, "");
}

const ExecSummaryRecommendationPage: React.FC<ExecSummaryRecommendationPageProps> = ({ companyLogoSrc, zapAlerts }) => {
    let mostVulnerableAlerts: ZapAlert[] = [];
    for (let level = 3; level > 0; level--) {
        mostVulnerableAlerts = zapAlerts.filter(alert => parseInt(alert.riskcode) >= level);
        if (mostVulnerableAlerts.length) break;
    }


    return (
        <WaterMarkedPage companyLogoSrc={companyLogoSrc} sectionHeader='Executive Summary' >
            <View style={styles.pageContent}>
                {/* Left Panel */}
                <View style={styles.leftPanel}>
                    <View style={styles.leftTextContainer}>
                        <Text style={styles.leftTitle}>Summary of {'\n'}Findings & {'\n'}Recommendations</Text>
                    </View>
                    <Text style={styles.numberBig}>R</Text>
                </View>

                {/* Right Panel */}
                <View style={styles.rightPanel}>
                    <View>
                        <Text style={styles.paragraph}>
                            During the execution of this mandate, the team identified several vulnerabilities. This section presents a summary of the findings and recommendations
                            to improve the security posture of the organizationâ€™s tested environments.
                        </Text>

                        {mostVulnerableAlerts.map((eachAlert, alertIndex) => {
                            return (
                                <React.Fragment key={alertIndex}>
                                    <Text style={styles.paragraphTitle}>{eachAlert.alert}</Text>
                                    <Text style={styles.paragraph}>{removePTags(eachAlert.desc)}</Text>
                                </React.Fragment>
                            )
                        })}
                    </View>

                    <Text style={styles.pageNumber}>4</Text>
                </View>
            </View>
        </WaterMarkedPage>
    )
};

export default ExecSummaryRecommendationPage;
